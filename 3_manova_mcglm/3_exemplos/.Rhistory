names(dados) <- c('x1', 'x2', 'y1', 'y2', 'y3', 'x3')
form1 <- y1 ~ x1+x2+x3
form2 <- y2 ~ x1+x2+x3
form3 <- y3 ~ x1+x2+x3
Z0 <- mc_id(dados) # Identidade
fit <-
mcglm(linear_pred = c(form1,
form2,
form3),
matrix_pred = list(c(Z0),
c(Z0),
c(Z0)),
link = c("identity","identity","identity"),
variance = c("tweedie",
"tweedie",
"tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
data = dados)
object = fit
form1 <- y1 ~ x1
form2 <- y2 ~ x1+x2
form3 <- y3 ~ x1+x2+x3
Z0 <- mc_id(dados) # Identidade
fit <-
mcglm(linear_pred = c(form1,
form2,
form3),
matrix_pred = list(c(Z0),
c(Z0),
c(Z0)),
link = c("identity","identity","identity"),
variance = c("tweedie",
"tweedie",
"tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
data = dados)
fit$beta_names[[1]]
fit$beta_names
summary(fit)
object = fit
# Vetor beta chapeu
coefs <- coef(object, type = c("beta", "tau", "power"))
coefs
# Número de parametros
n_coefs <- sum(as.vector(table(coefs$Response)))
n_coefs
# Número de respostas
n_resp <- length(as.vector(table(coefs$Response)))
n_resp
coefs$Response
# vcov
vcov_coefs <- vcov(object)[as.vector(coefs$Parameters),
as.vector(coefs$Parameters)]
vcov_coefs
# Matriz L para todos os parâmetros (Hypothesis matrix)
L_all <- diag(n_coefs)
L_all
colnames(L_all) <- as.vector(coefs$Parameters)
row.names(L_all) <- as.vector(coefs$Parameters)
user_list <- c('power11')
L_user <- subset(L_all, rownames(L_all) %in% user_list)
L_user
user_list <- c('tau11')
L_user <- subset(L_all, rownames(L_all) %in% user_list)
L_user
user_list <- c('tau11', 'tau21')
L_user <- subset(L_all, rownames(L_all) %in% user_list)
L_user
round(subset(coefs, coefs$Parameters %in% user_list)$Estimates, 4)
null_hyp <- c(0,0)
W <- vector() # Vetor para a estatística de teste
gl <- vector() # Vetor para graus de liberdade
p_val <- vector() # Vetor para p-valor
W <- as.numeric((t((L_user%*%coefs$Estimates) - null_hyp)) %*% (solve(L_user%*%vcov_coefs%*%t(L_user))) %*% ((L_user%*%coefs$Estimates) - null_hyp))
gl <- nrow(L_user)
p_val <- pchisq(W, df = gl, lower.tail = FALSE)
tabela <- data.frame(GL = gl,
W = round(W, 4),
P_valor = round(p_val, 4))
tabela
null_hyp <- c(0,0.1)
W <- vector() # Vetor para a estatística de teste
gl <- vector() # Vetor para graus de liberdade
p_val <- vector() # Vetor para p-valor
W <- as.numeric((t((L_user%*%coefs$Estimates) - null_hyp)) %*% (solve(L_user%*%vcov_coefs%*%t(L_user))) %*% ((L_user%*%coefs$Estimates) - null_hyp))
gl <- nrow(L_user)
p_val <- pchisq(W, df = gl, lower.tail = FALSE)
tabela <- data.frame(GL = gl,
W = round(W, 4),
P_valor = round(p_val, 4))
tabela
null_hyp <- round(subset(coefs, coefs$Parameters %in% user_list)$Estimates, 4)
W <- vector() # Vetor para a estatística de teste
gl <- vector() # Vetor para graus de liberdade
p_val <- vector() # Vetor para p-valor
W <- as.numeric((t((L_user%*%coefs$Estimates) - null_hyp)) %*% (solve(L_user%*%vcov_coefs%*%t(L_user))) %*% ((L_user%*%coefs$Estimates) - null_hyp))
gl <- nrow(L_user)
p_val <- pchisq(W, df = gl, lower.tail = FALSE)
tabela <- data.frame(GL = gl,
W = round(W, 4),
P_valor = round(p_val, 4))
tabela
coefs$Parameters
user_list <- c('beta20', 'beta37', 'tau31')
L_user <- subset(L_all, rownames(L_all) %in% user_list)
L_user
round(subset(coefs, coefs$Parameters %in% user_list)$Estimates, 4)
null_hyp <- c(1,-3.5,2.7)
W <- vector() # Vetor para a estatística de teste
gl <- vector() # Vetor para graus de liberdade
p_val <- vector() # Vetor para p-valor
W <- as.numeric((t((L_user%*%coefs$Estimates) - null_hyp)) %*% (solve(L_user%*%vcov_coefs%*%t(L_user))) %*% ((L_user%*%coefs$Estimates) - null_hyp))
gl <- nrow(L_user)
p_val <- pchisq(W, df = gl, lower.tail = FALSE)
tabela <- data.frame(GL = gl,
W = round(W, 4),
P_valor = round(p_val, 4))
tabela
?car::linear.hypothesis()
?car::linearHypothesis()
mc_linear_hypothesis <- function(object, parameters, null_hyp){
#----------------------------------------------------------------
# Vetor beta chapeu
coefs <- coef(object, type = c("beta", "tau", "power"))
#----------------------------------------------------------------
# Número de parametros
n_coefs <- sum(as.vector(table(coefs$Response)))
#----------------------------------------------------------------
# Número de respostas
n_resp <- length(as.vector(table(coefs$Response)))
#----------------------------------------------------------------
# vcov
vcov_coefs <- vcov(object)[as.vector(coefs$Parameters),
as.vector(coefs$Parameters)]
#----------------------------------------------------------------
# Matriz L para todos os parâmetros (Hypothesis matrix)
L_all <- diag(n_coefs)
#----------------------------------------------------------------
colnames(L_all) <- as.vector(coefs$Parameters)
row.names(L_all) <- as.vector(coefs$Parameters)
#----------------------------------------------------------------
# Parêmetros a serem testados
user_list <- parameters
L_user <- subset(L_all, rownames(L_all) %in% user_list)
#----------------------------------------------------------------
W <- vector() # Vetor para a estatística de teste
gl <- vector() # Vetor para graus de liberdade
p_val <- vector() # Vetor para p-valor
W <- as.numeric((t((L_user%*%coefs$Estimates) - null_hyp)) %*% (solve(L_user%*%vcov_coefs%*%t(L_user))) %*% ((L_user%*%coefs$Estimates) - null_hyp))
gl <- nrow(L_user)
p_val <- pchisq(W, df = gl, lower.tail = FALSE)
tabela <- data.frame(GL = gl,
W = round(W, 4),
P_valor = round(p_val, 4))
return(tabela)
}
coef(fit)
mc_linear_hypothesis(object = fit,
parameters = c('b10','b20','b30'),
null_hyp = c(0,0,0))
user_list <- c('b10','b20','b30')
L_user <- subset(L_all, rownames(L_all) %in% user_list)
L_user
user_list <- c('b10','b20','b30')
user_list
subset(L_all, rownames(L_all) %in% user_list)
mc_linear_hypothesis(object = fit,
parameters = c('beta10','beta20','beta30'),
null_hyp = c(0,0,0))
coef(fit)
mc_linear_hypothesis(object = fit,
parameters = c('beta10','beta20','beta30'),
null_hyp = c(0.03,1,29))
library(mcglm)
library(Matrix)
source('~/msc/3_manova_mcglm/2_funcoes/functions.R')
#---------------------------------------------------------------
dados <- read.csv2("dados_ovelhas.csv",
header = T,
sep = ";",
dec = ',')
dados2 <- dados[,c(1,2,3,4,
14,15,17,21,
7,9,10,11)]
dados2$momento <- ordered(dados2$tempo,
levels=c("Antes", "Durante", "Depois"))
form.ncorpo  <- ncorpo  ~ (sessao + tempo + linhagem)^2
form.ncorpo2 <- ncabeca ~ (sessao + tempo + linhagem)^2
form.ncorpo3 <- norelha ~ (sessao + tempo + linhagem)^2
Z0 <- mc_id(dados2) # Identidade
Z1 <- mc_mixed(~0 + factor(animal), data = dados2) # Animal
dados2$comb <- paste(dados2$animal, dados2$sessao)
Z2 <- mc_mixed(~0 + comb, data = dados2) # Animal Momento
fit_jointP <-
mcglm(linear_pred = c(form.ncorpo,
form.ncorpo2,
form.ncorpo3),
matrix_pred = list(c(Z0, Z1, Z2),
c(Z0, Z1, Z2),
c(Z0, Z1, Z2)),
link = c("log","log","log"),
variance = c("poisson_tweedie",
"poisson_tweedie",
"poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
power_fixed = c(F, F, F),
data = dados2)
source('~/msc/3_manova_mcglm/2_funcoes/functions.R')
coef(fit_jointP)
mc_linear_hypothesis(object = fit_jointP,
parameters = c(beta10),
null_hyp = 1)
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta10'),
null_hyp = 1)
library(mcglm)
library(Matrix)
source('~/msc/3_manova_mcglm/2_funcoes/functions.R')
dados <- read.csv2("NBA.csv",
header = T,
sep = ";",
dec = ',')
dados$X6 <- sample(as.factor(rep(c('nivel_1', 'nivel_2',
'nivel_3', 'nivel_4',
'nivel_5', 'nivel_6'), 9)))
names(dados) <- c('x1', 'x2', 'y1', 'y2', 'y3', 'x3')
form1 <- y1 ~ x1+x2+x3
form2 <- y2 ~ x1+x2+x3
form3 <- y3 ~ x1+x2+x3
Z0 <- mc_id(dados) # Identidade
fit <-
mcglm(linear_pred = c(form1,
form2,
form3),
matrix_pred = list(c(Z0),
c(Z0),
c(Z0)),
link = c("identity","identity","identity"),
variance = c("tweedie",
"tweedie",
"tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
data = dados)
mc_manova(fit)
mc_manova_II(fit)
mc_manova_III(fit)
mc_manova_II(fit)
mc_manova_III(fit)
coef(fit)
fit$beta_names
Reduce(c, fit$beta_names)
coef(fit, type = 'beta')
c(coef(fit, type = 'beta'), Reduce(c, fit$beta_names))
par <- coef(fit, type = 'beta')
par$Names <- Reduce(c, fit$beta_names)
par
mc_linear_hypothesis(object = fit,
parameters = c('beta11', 'beta21', 'beta31'),
null_hyp = c(0,0,0))
mc_manova_II(fit)
mc_linear_hypothesis(object = fit,
parameters = c('beta21', 'beta22', 'beta32'),
null_hyp = c(0,0,0))
mc_linear_hypothesis(object = fit,
parameters = c('beta12', 'beta22', 'beta32'),
null_hyp = c(0,0,0))
par
mc_linear_hypothesis(object = fit,
parameters = c('beta13', 'beta14', 'beta15', 'beta16', 'beta17',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27',
),
null_hyp = rep(0,15))
mc_linear_hypothesis(object = fit,
parameters = c('beta13', 'beta14', 'beta15', 'beta16', 'beta17',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27'
),
null_hyp = rep(0,15))
c('beta13', 'beta14', 'beta15', 'beta16', 'beta17',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27'
)
rep(0,15)
mc_linear_hypothesis(object = fit,
parameters = c('beta13', 'beta14', 'beta15', 'beta16', 'beta17',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27'
),
null_hyp = rep(0,15))
mc_linear_hypothesis(object = fit,
parameters = c('beta13', 'beta14', 'beta15', 'beta16', 'beta17',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27',
'beta33', 'beta34', 'beta35', 'beta36', 'beta37'
),
null_hyp = rep(0,15))
mc_manova_II(fit)
par$Names <- Reduce(c, fit$beta_names)
par
mc_manova_II(fit)
mc_manova_III(fit)
mc_linear_hypothesis(object = fit,
parameters = c('beta10', 'beta20', 'beta30'),
null_hyp = c(0,0,0))
mc_linear_hypothesis(object = fit,
parameters = c('beta11', 'beta21', 'beta31'),
null_hyp = c(0,0,0))
mc_linear_hypothesis(object = fit,
parameters = c('beta12', 'beta22', 'beta32'),
null_hyp = c(0,0,0))
mc_linear_hypothesis(object = fit,
parameters = c('beta13', 'beta14', 'beta15', 'beta16', 'beta17',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27',
'beta33', 'beta34', 'beta35', 'beta36', 'beta37'
),
null_hyp = rep(0,15))
form1 <- y1 ~ (x1+x2+x3)^2
form2 <- y2 ~ (x1+x2+x3)^2
form3 <- y3 ~ (x1+x2+x3)^2
Z0 <- mc_id(dados) # Identidade
fit <-
mcglm(linear_pred = c(form1,
form2,
form3),
matrix_pred = list(c(Z0),
c(Z0),
c(Z0)),
link = c("identity","identity","identity"),
variance = c("tweedie",
"tweedie",
"tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
data = dados)
mc_manova_II(fit)
mc_manova_III(fit)
mc_linear_hypothesis(object = fit,
parameters = c('beta10', 'beta20', 'beta30'),
null_hyp = c(0,0,0))
mc_linear_hypothesis(object = fit,
parameters = c('beta11', 'beta21', 'beta31'),
null_hyp = c(0,0,0))
mc_linear_hypothesis(object = fit,
parameters = c('beta12', 'beta22', 'beta32'),
null_hyp = c(0,0,0))
mc_linear_hypothesis(object = fit,
parameters = c('beta13', 'beta14', 'beta15', 'beta16', 'beta17',
'beta23', 'beta24', 'beta25', 'beta26', 'beta27',
'beta33', 'beta34', 'beta35', 'beta36', 'beta37'
),
null_hyp = rep(0,15))
mc_manova_II(fit)
par <- coef(fit, type = 'beta')
par$Names <- Reduce(c, fit$beta_names)
par
mc_manova_II(fit)
mc_linear_hypothesis(object = fit,
parameters = c('beta18', 'beta28', 'beta38'),
null_hyp = c(0,0,0))
mc_manova_II(fit)
mc_anova_II(fit)[[i]]
mc_anova_II(fit)
mc_linear_hypothesis(object = fit,
parameters = c('beta10'),
null_hyp = c(0))
mc_linear_hypothesis(object = fit,
parameters = c('beta20'),
null_hyp = c(0))
mc_linear_hypothesis(object = fit,
parameters = c('beta30'),
null_hyp = c(0))
mc_anova_disp(object =  fit,
p_var = list(c(0),
c(0),
c(0)),
names = list(c('t1'),
c('t1'),
c('t1')))
mc_linear_hypothesis(object = fit,
parameters = c('tau11'),
null_hyp = c(0))
mc_linear_hypothesis(object = fit,
parameters = c('tau21'),
null_hyp = c(0))
mc_linear_hypothesis(object = fit,
parameters = c('tau31'),
null_hyp = c(0))
mc_manova_disp(fit,
p_var = 0,
names = 't1')
mc_linear_hypothesis(object = fit,
parameters = c('tau11', 'tau21', 'tau31'),
null_hyp = c(0))
library(mcglm)
library(Matrix)
source('~/msc/3_manova_mcglm/2_funcoes/functions.R')
#---------------------------------------------------------------
dados <- read.csv2("dados_ovelhas.csv",
header = T,
sep = ";",
dec = ',')
dados2 <- dados[,c(1,2,3,4,
14,15,17,21,
7,9,10,11)]
dados2$momento <- ordered(dados2$tempo,
levels=c("Antes", "Durante", "Depois"))
form.ncorpo  <- ncorpo  ~ (sessao + tempo + linhagem)
form.ncorpo2 <- ncabeca ~ (sessao + tempo + linhagem)
form.ncorpo3 <- norelha ~ (sessao + tempo + linhagem)
Z0 <- mc_id(dados2) # Identidade
Z1 <- mc_mixed(~0 + factor(animal), data = dados2) # Animal
dados2$comb <- paste(dados2$animal, dados2$sessao)
Z2 <- mc_mixed(~0 + comb, data = dados2) # Animal Momento
fit_jointP <-
mcglm(linear_pred = c(form.ncorpo,
form.ncorpo2,
form.ncorpo3),
matrix_pred = list(c(Z0, Z1, Z2),
c(Z0, Z1, Z2),
c(Z0, Z1, Z2)),
link = c("log","log","log"),
variance = c("poisson_tweedie",
"poisson_tweedie",
"poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
power_fixed = c(F, F, F),
data = dados2)
mc_manova_II(fit_jointP)
mc_linear_hypothesis(object = fit,
parameters = c('beta10', 'beta20', 'beta30'),
null_hyp = c(0,0,0))
mc_manova_II(fit_jointP)
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta10', 'beta20', 'beta30'),
null_hyp = c(0,0,0))
par <- coef(fit_jointP, type = 'beta')
par$Names <- Reduce(c, fit_jointP$beta_names)
par
mc_manova_II(fit_jointP)
mc_linear_hypothesis(object = fit,
parameters = c('beta11', 'beta12', 'beta13',
'beta21', 'beta22', 'beta23',
'beta31', 'beta32', 'beta33'),
null_hyp = c(0))
mc_manova_II(fit_jointP)
mc_linear_hypothesis(object = fit,
parameters = c('beta11', 'beta12',
'beta21', 'beta22',
'beta31', 'beta32'),
null_hyp = c(0))
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta11', 'beta12',
'beta21', 'beta22',
'beta31', 'beta32'),
null_hyp = c(0))
mc_manova_II(fit_jointP)
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta11', 'beta12',
'beta21', 'beta22',
'beta31', 'beta32'),
null_hyp = c(0))
par
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta11', 'beta12',
'beta21', 'beta22',
'beta31', 'beta32'),
null_hyp = c(0))
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta11', 'beta12',
'beta21', 'beta22',
'beta31', 'beta32'),
null_hyp = c(-0.5))
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta11', 'beta12',
'beta21', 'beta22',
'beta31', 'beta32'),
null_hyp = c(-0.4))
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta11', 'beta12',
'beta21', 'beta22',
'beta31', 'beta32'),
null_hyp = c(-0.3))
mc_anova_I(fit_jointP)[[i]]
mc_anova_I(fit_jointP)
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta11', 'beta12',
'beta13', 'beta14',
'beta15', 'beta16'),
null_hyp = c(0))
par
mc_linear_hypothesis(object = fit_jointP,
parameters = c('beta10','beta11', 'beta12',
'beta13', 'beta14',
'beta15'),
null_hyp = c(0))
