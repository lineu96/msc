as.numeric(predict(m))
as.numeric(predict(m))
plot(as.numeric(predict(m))~ na.omit(Prestige$prestige))
na.omit(Prestige$prestige))
na.omit(Prestige$prestige)
as.numeric(predict(m))
plot(as.numeric(predict(m)))
plot(na.omit(Prestige$prestige))
loess(predict(m))
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
dados
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
library(ggplot2)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('') +
geom_abline(slope = 0, intercept = 1)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('') +
geom_segment(1,1,1,1)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('') +
geom_segment(
+
stat_summary(fun.y = median, geom = 'line', aes(group = Day, colour =Day))
)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="line",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="line",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom=c("point", "line"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=mean,
geom=c("point", "line"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(fun.y = median,
geom = 'line')+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(fun.y = median,
geom = 'line',
aes(group = fat1, colour =fat1)))
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(fun.y = median,
geom = 'line',
aes(group = fat1, colour =fat1))
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
library(ggplot2)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('Estatura') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
stat_summary(
fun.y = median,
geom = 'line',
position = position_dodge(width = 0.9) #this has to be added
)+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
#  stat_summary(fun.y=median,
#               geom=c("point"),
#               shape=20,
#               size=3,
#               color="red",
#               fill="red")+
stat_summary(
fun.y = median,
geom = 'line',
position = position_dodge(width = 0.9) #this has to be added
)+
xlab('') + ylab('') + ggtitle('')
stat_summary(
fun.y = median,
geom = 'line',
aes(group = fat1, colour = fat1),
position = position_dodge(width = 0.9) #this has to be added
)
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(
fun.y = median,
geom = 'line',
aes(group = fat1, colour = fat1),
position = position_dodge(width = 0.9) #this has to be added
)+
xlab('') + ylab('') + ggtitle('')
ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g1 <- ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g2 <- ggplot(data = dados, mapping = aes(x=fat2, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
library(ggplot2)
library(ggpubr)
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
g1 <- ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g2 <- ggplot(data = dados, mapping = aes(x=fat2, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggarrange(g1, g2,
nrow = 1, ncol = 2)
library(ggplot2)
library(ggpubr)
dados <- data.frame(resp = rnorm(1000),
fat1 = letters[1:5],
fat2 = letters[6:10])
g1 <- ggplot(data = dados, mapping = aes(x=fat1, y=resp, color=fat1)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
g2 <- ggplot(data = dados, mapping = aes(x=fat2, y=resp, color=fat2)) +
geom_boxplot(alpha = 0.6, , fatten = NULL)+
stat_summary(fun.y=median,
geom=c("point"),
shape=20,
size=3,
color="red",
fill="red")+
xlab('') + ylab('') + ggtitle('')
ggarrange(g1, g2,
nrow = 1,
ncol = 2)
##rm(list=ls())
## prevalencia
pS <- 0.50,0.60
##rm(list=ls())
## prevalencia
pS <- 0.50
pH <- 1-pS
## teste 1
pE.S <- 0.80
pnE.S <- 1-pE.S
pnE.H <- 0.65
pE.H <- 1 - pnE.H
## prevalencia
pS <- 0.50
pH <- 1-pS
## teste 1
pE.S <- 0.80
pnE.S <- 1-pE.S
pnE.H <- 0.65
pE.H <- 1 - pnE.H
(pE <- (pE.S * pS) + (pE.H * pH))
(pnE <- (pnE.S * pS) + (pnE.H * pH))
(pS.E <- (pE.S * pS)/pE)
(pH.E <- (pE.H * pH)/pE)
##rm(list=ls())
## prevalencia
pS <- 0.50
pH <- 1-pS
## teste 1
pE.S <- 0.80
pnE.S <- 1-pE.S
pnE.H <- 0.65
pE.H <- 1 - pnE.H
(pE <- (pE.S * pS) + (pE.H * pH))
(pnE <- (pnE.S * pS) + (pnE.H * pH))
(pS.E <- (pE.S * pS)/pE)
(pH.E <- (pE.H * pH)/pE)
## teste 2
(pM.S <- 0.65
## teste 2
pM.S <- 0.65
## teste 2
pM.S <- 0.65
(pnM.S <- 1 - pM.S)
(pnM.H <- 0.55)
(pM.H <- 1 - pnM.H)
(pM <- (pM.S * pS) + (pM.H * pH))
(pnM <- (pnM.S * pS) + (pnM.H * pH))
(pS.M <- (pM.S * pS)/pM)
(pH.M <- (pM.H * pH)/pM)
## combinando testes 1 e 2
(cS.EM <- pM.S * pE.S * pS)
(cH.EM <- pM.H * pE.H * pH)
(pS.EM <- cS.EM/(cS.EM + cH.EM))
(pH.EM <- cH.EM/(cS.EM + cH.EM))
## QUESTION/ANSWER GENERATION
questions <- character(6)
solutions <- logical(6)
explanations <- character(6)
foo1 <- c(pE.S, pS.E)
i1 <- sample(1:2, 1)
questions[1] <- paste("Se um email contém anexo executável a probabilidade de ser SPAM é de", round(foo1[i1], dig=2))
solutions[1] <- (i1 == 2)
explanations[1] <- paste("Aplicando o teorema de Bayes obtém-se P[S|E] = ", round(pS.E, dig=2))
foo2 <- c(pM.S, pS.M)
i2 <- sample(1:2, 1)
questions[2] <- paste("Se um email contém maiúsculas a probabilidade de ser SPAM é de", round(foo2[i2], dig=2))
solutions[2] <- (i2 == 2)
explanations[2] <- paste("Aplicando o teorema de Bayes obtém-se P[S|M] = ", round(pS.M, dig=2))
foo3 <- c("ser SPAM", "não ser SPAM")
i3 <- sample(1:2, 1)
questions[3] <- paste("Se um email contém anexo executável a probabilidade maior é de", foo3[i3])
solutions[3] <- ifelse(i3 == 1, (pS.E > pH.E), (pS.E < pH.E))
explanations[3] <- paste("P[S|E] = ", round(pS.E, dig=2), "e P[H|E] = ", round(pH.E, dig=2))
foo4 <- c(pE.H+pM.H - pE.H*pM.H, pH.EM)
i4 <- sample(1:2, 1)
questions[4] <- paste("Se um email contém ambos, anexo executável e maiúsculas a probabilidade de não ser SPAM é de", round(foo4[i4], dig=2))
solutions[4] <- (i4 == 2)
explanations[4] <- paste("Aplicando o teorema de Bayes obtém-se P[H|E,M] = ", round(pH.EM, dig=2))
foo5 <- c("SPAM","não SPAM")
i5 <- sample(1:2, 1)
questions[5] <- paste("Adota-se o seguinte critério: um email é marcado como SPAM se após observar ambas características a probabilidade de ser SPAM ultrapasse 0,80. Portento, se um email contiver anexo executável e maiúsculas ele será marcado como:", foo5[i5])
solutions[5] <- ifelse(i5 == 1, (pS.EM > 0.80),(pS.EM <= 0.80))
explanations[5] <- paste("Aplicando o teorema de Bayes obtém-se P[S|E,M] = ", round(pS.EM, dig=2))
foo6 <- c(pE, pE.S)
i6 <- sample(1:2, 1)
questions[6] <- paste("A probabilidade de receber um email que contenha um anexo executável é", round(foo6[i6], dig=2))
solutions[6] <- (i6 == 1)
explanations[6] <- paste("P[E] = P[E|S]P[S] +  P[E|H]P[H] = ", round(pE, dig=2))
(pS.M <- (pM.S * pS)/pM)
(pS.E <- (pE.S * pS)/pE)
pM.S
pE.S
pS
pM.S * pE.S * pS
22-6
51-14
22+36+51
install.packages("mcglm")
library(mcglm)
library(Matrix)
source('~/msc/3_manova_mcglm/2_funcoes/functions2.R')
#---------------------------------------------------------------
dados <- read.csv2("dados_ovelhas.csv",
header = T,
sep = ";",
dec = ',')
setwd("~/msc/3_manova_mcglm/3_exemplos")
#---------------------------------------------------------------
dados <- read.csv2("dados_ovelhas.csv",
header = T,
sep = ";",
dec = ',')
dados2 <- dados[,c(1,2,3,4,
14,15,17,21,
7,9,10,11)]
dados2$momento <- ordered(dados2$tempo,
levels=c("Antes", "Durante", "Depois"))
form.ncorpo  <- ncorpo  ~ (sessao + tempo + linhagem)
form.ncorpo2 <- ncabeca ~ (sessao + tempo + linhagem)
form.ncorpo3 <- norelha ~ (sessao + tempo + linhagem)
Z0 <- mc_id(dados2) # Identidade
Z1 <- mc_mixed(~0 + factor(animal), data = dados2) # Animal
dados2$comb <- paste(dados2$animal, dados2$sessao)
Z2 <- mc_mixed(~0 + comb, data = dados2) # Animal Momento
fit_jointP <-
mcglm(linear_pred = c(form.ncorpo,
form.ncorpo2,
form.ncorpo3),
matrix_pred = list(c(Z0, Z1, Z2),
c(Z0, Z1, Z2),
c(Z0, Z1, Z2)),
link = c("log","log","log"),
variance = c("poisson_tweedie",
"poisson_tweedie",
"poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
power_fixed = c(F, F, F),
data = dados2)
fit_jointP$beta_names[[1]]
summary(fit_jointP)
mc_anova_pc <- anova(fit_jointP)
i = 1
mc_anova_pc[[i]]
mc_anova_I(fit_jointP)[[i]]
mc_anova_pc[[i]]
mc_anova_II(fit_jointP)[[i]]
mc_anova_III(fit_jointP)[[i]]
mc_manova(fit_jointP)
mc_manova_III(fit_jointP)
mc_manova_II(fit_jointP) == mc_manova_III(fit_jointP)
form.ncorpo  <- ncorpo  ~ (sessao + tempo + linhagem)^2
form.ncorpo2 <- ncabeca ~ (sessao + tempo + linhagem)^2
form.ncorpo3 <- norelha ~ (sessao + tempo + linhagem)^2
Z0 <- mc_id(dados2) # Identidade
Z1 <- mc_mixed(~0 + factor(animal), data = dados2) # Animal
dados2$comb <- paste(dados2$animal, dados2$sessao)
Z2 <- mc_mixed(~0 + comb, data = dados2) # Animal Momento
fit_jointP <-
mcglm(linear_pred = c(form.ncorpo,
form.ncorpo2,
form.ncorpo3),
matrix_pred = list(c(Z0, Z1, Z2),
c(Z0, Z1, Z2),
c(Z0, Z1, Z2)),
link = c("log","log","log"),
variance = c("poisson_tweedie",
"poisson_tweedie",
"poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
power_fixed = c(F, F, F),
data = dados2)
fit_jointP$beta_names[[1]]
summary(fit_jointP)
mc_anova_pc <- anova(fit_jointP)
i = 1
mc_anova_pc[[i]]
mc_anova_III(fit_jointP)[[i]]
mc_anova_II(fit_jointP)[[i]]
mc_anova_I(fit_jointP)[[i]]
mc_manova(fit_jointP)
mc_manova_III(fit_jointP)
mc_manova_II(fit_jointP)
mc_manova_I(fit_jointP)
