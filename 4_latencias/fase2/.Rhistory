setwd("~/msc/4_latencias/fase2")
library(mcglm)
library(Matrix)
library(tidyverse)
dados <- read.csv2('latencias_1_NOVA.csv',  header = T,  sep = ',')
names(dados) <- c('n',  'code',  'inst',  'op0',  'op1',  'op2',
'lock',  'set_rex',  'segment',  'mem_xchg',
'p0156',  'p06',  'p23',  'p237',  'p4',  'p1',
'p15',  'p015',  'p5',  'p0',  'p05',  'p01',
'p6',  'min_lat',  'max_lat',  'count')
## Seleção das variaveis de interesse
dados <- select(dados,  n,  inst,  lock,  segment,
p0156,  p06,  p23, p237,  p4,  p1,  p15,  p0,  p05,
min_lat,  max_lat,  count)
## Transformando portas em binária
dados$lock <- as.factor(ifelse(dados$lock > 0,  1, 0))
dados$p0 <- as.factor(ifelse(dados$p0 > 0,  1, 0))
dados$p237 <- as.factor(ifelse(dados$p237 > 0,  1, 0))
dados$p4 <- as.factor(ifelse(dados$p4 > 0,  1, 0))
dados$p1 <- as.factor(ifelse(dados$p1 > 0,  1, 0))
dados$p15 <- as.factor(ifelse(dados$p15 > 0,  1, 0))
dados$segment <- ifelse(dados$segment > 0,  1, 0)
indices <- subset(dados,  dados$min_lat<=25 &
dados$max_lat<=45 |
dados$inst == 'DIV' |
dados$inst == 'IDIV')$n
mal_ajustados <- c(85, 173, 174, 175, 191, 192, 193, 209, 210, 211,
214, 335, 409, 410, 411, 412, 413, 414, 420, 421,
422, 423, 424, 425, 485, 486, 487, 533, 534, 535,
536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
574, 575, 576, 577, 635, 636, 638, 640, 641, 642,
644, 645, 646, 647, 648, 649, 656, 657, 658, 665,
666, 677, 678, 683, 684, 685, 692, 693, 842, 845,
848, 851, 854, 857, 860, 863, 866, 869, 872, 875,
878, 881, 884, 887, 888, 967, 969, 970, 971, 972,
1075, 1076, 1077, 1078, 1079)
massa <- subset(dados,  dados$n %in% indices & !(dados$n %in% mal_ajustados))
analista <- subset(dados,  !(dados$n %in% indices) | (dados$n %in% mal_ajustados))
nrow(dados)
nrow(analista)
form.min_lat <- min_lat ~ (lock + p0156 + p06 + p23 + p237 + p4 + p1 + p15 + p0)
form.max_lat <- max_lat ~ (lock + p0156 + p06 + p23 + p237 + p4 + p1 + p15 + p0)
Z0 <- mc_id(massa) # Identidade
fit <-
mcglm(linear_pred = c(form.min_lat,
form.max_lat),
matrix_pred = list(c(Z0),
c(Z0)),
link = c("log", "log"),
variance = c("poisson_tweedie", "poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.5,
max_iter = 60,
tol = 1e-8),
power_fixed = c(F,F),
data = massa)
## chol(vcov) inversa
chol_inv <- Matrix::chol(fit$inv_C)
## Resíduos empilhados
res <- as.numeric(residuals(fit, type = 'raw'))
## Produto matricial
residuos <- as.numeric(chol_inv%*%res)
## Preditos
preditos <- fit$fitted
## Dataframe
res_pred <- data.frame(index = 1:nrow(massa),
resp = c(rep('min_lat', nrow(massa)),
rep('max_lat', nrow(massa))),
observado = c(massa$min_lat,massa$max_lat),
preditos = preditos,
pearson = residuos,
raw = res
)
ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')
ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)
ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo Pearson')
ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
## Observado vs Predito
ggplot(data = res_pred, aes(x=observado,y=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(method = 'lm')+
xlab('Observado')+
ylab('Predito') + facet_wrap(~resp, scales = 'free') +
geom_abline(slope = 1, intercept = 1, col = 2, lwd = 1.1)
coef(fit, type = 'tau')
