link = c("log", "log"),
variance = c("poisson_tweedie", "poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 500,
tol = 1e-01),
power_fixed = c(F,F),
data = massa)
fit <-
mcglm(linear_pred = c(form.min_lat,
form.max_lat),
matrix_pred = list(c(Z0),
c(Z0)),
link = c("log", "log"),
variance = c("poisson_tweedie", "poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 500,
tol = 1e-01),
#power_fixed = c(F,F),
data = massa)
fit <-
mcglm(linear_pred = c(form.min_lat,
form.max_lat),
matrix_pred = list(c(Z0),
c(Z0)),
link = c("log", "log"),
variance = c("poisson_tweedie", "poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 1,
max_iter = 500,
tol = 1e-04),
#power_fixed = c(F,F),
data = massa)
matplot(fit$IterationCovariance, type = 'l', xlim = c(1,90))
summary(fit)
coef(fit, type = 'beta')
coef(fit, type = 'tau')
coef(fit, type = 'power')
## chol(vcov) inversa
chol_inv <- Matrix::chol(fit$inv_C)
## Resíduos empilhados
res <- as.numeric(residuals(fit, type = 'raw'))
## Produto matricial
residuos <- as.numeric(chol_inv%*%res)
## Preditos
preditos <- fit$fitted
## Dataframe
res_pred <- data.frame(index = 1:nrow(massa),
resp = c(rep('min_lat', nrow(massa)),
rep('max_lat', nrow(massa))),
observado = c(massa$min_lat,massa$max_lat),
preditos = preditos,
pearson = residuos,
raw = res
)
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
mean
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
sd
ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)
ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo Pearson')
mean2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[2]
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
g1
g2
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
g1
g2
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
## Observado vs Predito
ggplot(data = res_pred, aes(x=observado,y=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(method = 'lm')+
xlab('Observado')+
ylab('Predito') + facet_wrap(~resp, scales = 'free') +
geom_abline(slope = 1, intercept = 1, col = 2, lwd = 1.1)
massa$pred_min <- res_pred$preditos[1:nrow(massa)]
massa$pred_max <- res_pred$preditos[(nrow(massa)+1):nrow(res_pred)]
massa$pearson_min <- res_pred$pearson[1:nrow(massa)]
massa$pearson_max <- res_pred$pearson[(nrow(massa)+1):nrow(res_pred)]
massa$raw_min <- res_pred$raw[1:nrow(massa)]
massa$raw_max <- res_pred$raw[(nrow(massa)+1):nrow(res_pred)]
massa[,c(14,17,21,19,
15,18,22,20)]
mal_ajustados <- subset(massa,
raw_min > 4  |
raw_max > 4  |
raw_min < -4 |
raw_max < -4
)
mal_ajustados[,c(22,25,29,27,
23,26,30,28)]
mal_ajustados$n
mal_ajustados[,c(22,25,29,27,
23,26,30,28)]
mal_ajustados[,c(22,25,29,27,
23,26,30,28)]
mal_ajustados$n
resumo <- summary(fit)
# TAU E P PARA CADA RESPOSTA
round(resumo$`Resp.Variable 1`$Power,2)
round(resumo$`Resp.Variable 1`$tau,2)
round(resumo$`Resp.Variable 2`$Power,2)
round(resumo$`Resp.Variable 2`$tau,2)
# PARAMETROS DE REGRESSAO PARA CADA RESPOSTA
round(resumo$`Resp.Variable 1`$Regression,2)
round(resumo$`Resp.Variable 2`$Regression,2)
# INTERVALOS DE CONFIANÇA
confint(fit)[1:7,]
confint(fit)[8:15,]
confint(fit)[8:14,]
confint(fit)[15:20,]
confint(fit)[15:19,]
confint(fit)[15:18,]
confint(fit)[15:17,]
# ANOVA
anova(fit)
# MANOVA
mc_manova(fit)
predito <- function(p23, p4, p015,
p5, p0, p01){
betas <- data.frame(beta_name = c('intercept',
'p23', 'p4', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:10],
estim_max = coef(fit, type = 'beta')$Estimates[11:20])
min <- exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[3]  *  p4 +
betas$estim_min[4]  *  p015 +
betas$estim_min[5]  *  p5 +
betas$estim_min[6]  *  p0 +
betas$estim_min[7]  *  p01
)
min <- exp(
betas$estim_max[1] +           #intercept
betas$estim_max[2]  *  p23 +
betas$estim_max[3]  *  p4 +
betas$estim_max[4]  *  p015 +
betas$estim_max[5]  *  p5 +
betas$estim_max[6]  *  p0 +
betas$estim_max[7]  *  p01
)
out <- data.frame(min_lat = min,
max_lat = max)
return(out)
}
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p4   = 0,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 0)
betas <- data.frame(beta_name = c('intercept',
'p23', 'p4', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:10],
estim_max = coef(fit, type = 'beta')$Estimates[11:20])
coef(fit, type = 'beta')$Estimates[8:14]
coef(fit, type = 'beta')$Estimates[1:7]
coef(fit, type = 'beta')$Estimates
coef(fit, type = 'beta')
predito <- function(p23, p4, p015,
p5, p0, p01){
betas <- data.frame(beta_name = c('intercept',
'p23', 'p4', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:7],
estim_max = coef(fit, type = 'beta')$Estimates[8:14])
min <- exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[3]  *  p4 +
betas$estim_min[4]  *  p015 +
betas$estim_min[5]  *  p5 +
betas$estim_min[6]  *  p0 +
betas$estim_min[7]  *  p01
)
min <- exp(
betas$estim_max[1] +           #intercept
betas$estim_max[2]  *  p23 +
betas$estim_max[3]  *  p4 +
betas$estim_max[4]  *  p015 +
betas$estim_max[5]  *  p5 +
betas$estim_max[6]  *  p0 +
betas$estim_max[7]  *  p01
)
out <- data.frame(min_lat = min,
max_lat = max)
return(out)
}
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p4   = 0,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 0)
betas <- data.frame(beta_name = c('intercept',
'p23', 'p4', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:7],
estim_max = coef(fit, type = 'beta')$Estimates[8:14])
betas
p23
exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[3]  *  p4 +
betas$estim_min[4]  *  p015 +
betas$estim_min[5]  *  p5 +
betas$estim_min[6]  *  p0 +
betas$estim_min[7]  *  p01
)
p23=0
p4=0
p015=0
p5=0
p0=0
p01=0
exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[3]  *  p4 +
betas$estim_min[4]  *  p015 +
betas$estim_min[5]  *  p5 +
betas$estim_min[6]  *  p0 +
betas$estim_min[7]  *  p01
)
exp(
betas$estim_max[1] +           #intercept
betas$estim_max[2]  *  p23 +
betas$estim_max[3]  *  p4 +
betas$estim_max[4]  *  p015 +
betas$estim_max[5]  *  p5 +
betas$estim_max[6]  *  p0 +
betas$estim_max[7]  *  p01
)
min <- exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[3]  *  p4 +
betas$estim_min[4]  *  p015 +
betas$estim_min[5]  *  p5 +
betas$estim_min[6]  *  p0 +
betas$estim_min[7]  *  p01
)
min <- exp(
betas$estim_max[1] +           #intercept
betas$estim_max[2]  *  p23 +
betas$estim_max[3]  *  p4 +
betas$estim_max[4]  *  p015 +
betas$estim_max[5]  *  p5 +
betas$estim_max[6]  *  p0 +
betas$estim_max[7]  *  p01
)
out <- data.frame(min_lat = min,
max_lat = max)
data.frame(min_lat = min,
max_lat = max)
min
max
max <- exp(
betas$estim_max[1] +           #intercept
betas$estim_max[2]  *  p23 +
betas$estim_max[3]  *  p4 +
betas$estim_max[4]  *  p015 +
betas$estim_max[5]  *  p5 +
betas$estim_max[6]  *  p0 +
betas$estim_max[7]  *  p01
)
data.frame(min_lat = min,
max_lat = max)
predito <- function(p23, p4, p015,
p5, p0, p01){
betas <- data.frame(beta_name = c('intercept',
'p23', 'p4', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:7],
estim_max = coef(fit, type = 'beta')$Estimates[8:14])
min <- exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[3]  *  p4 +
betas$estim_min[4]  *  p015 +
betas$estim_min[5]  *  p5 +
betas$estim_min[6]  *  p0 +
betas$estim_min[7]  *  p01
)
max <- exp(
betas$estim_max[1] +           #intercept
betas$estim_max[2]  *  p23 +
betas$estim_max[3]  *  p4 +
betas$estim_max[4]  *  p015 +
betas$estim_max[5]  *  p5 +
betas$estim_max[6]  *  p0 +
betas$estim_max[7]  *  p01
)
out <- data.frame(min_lat = min,
max_lat = max)
return(out)
}
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p4   = 0,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 0)
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 1,
p4   = 0,
p015 = 0,
p5   = 0,
p0   = 1,
p01  = 0)
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 1,
p4   = 0,
p015 = 0,
p5   = 1,
p0   = 0,
p01  = 0)
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p4   = 0,
p015 = 1,
p5   = 0,
p0   = 0,
p01  = 0)
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 1,
p4   = 0,
p015 = 1,
p5   = 0,
p0   = 0,
p01  = 0)
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 1,
p4   = 0,
p015 = 1,
p5   = 1,
p0   = 1,
p01  = 0)
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p4   = 1,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 0)
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p4   = 1,
p015 = 0,
p5   = 1,
p0   = 0,
p01  = 1)
dados[sample(nrow(massa),1),c('p23', 'p4', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p4   = 0,
p015 = 0,
p5   = 1,
p0   = 0,
p01  = 1)
