geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
#---------------------------------------------------------------
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
#---------------------------------------------------------------
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
#---------------------------------------------------------------
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
#---------------------------------------------------------------
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
#---------------------------------------------------------------
## Observado vs Predito
ggplot(data = res_pred, aes(x=observado,y=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(method = 'lm')+
xlab('Observado')+
ylab('Predito') + facet_wrap(~resp, scales = 'free') +
geom_abline(slope = 1, intercept = 1, col = 2, lwd = 1.1)
#---------------------------------------------------------------
#---------------------------------------------------------------
# MAL AJUSTADOS
#---------------------------------------------------------------
dados$pred_min <- res_pred$preditos[1:nrow(dados)]
dados$pred_max <- res_pred$preditos[(nrow(dados)+1):nrow(res_pred)]
dados$pearson_min <- res_pred$pearson[1:nrow(dados)]
dados$pearson_max <- res_pred$pearson[(nrow(dados)+1):nrow(res_pred)]
dados$raw_min <- res_pred$raw[1:nrow(dados)]
dados$raw_max <- res_pred$raw[(nrow(dados)+1):nrow(res_pred)]
dados[,c(14,17,21,19,
15,18,22,20)]
mal_ajustados <- subset(dados,
raw_min > 2.5  |
raw_max > 2.5  |
raw_min < -2.5 |
raw_max < -2.5|
pred_min > 40    |
pred_max > 40
)
mal_ajustados[,c(22,25,29,27,
23,26,30,28)]
mal_ajustados$n
# BASE NOVA
massa <- subset(dados,  !(dados$n %in% mal_ajustados$n))
analista <- subset(dados, (dados$n %in% mal_ajustados$n))
nrow(dados)
nrow(massa) + nrow(analista)
#---------------------------------------------------------------
# AJUSTE
#---------------------------------------------------------------
# Preditor
form.min_lat <- min_lat ~ (p23 + p015 + p5 + p0 + p01)
form.max_lat <- max_lat ~ (p23 + p015 + p5 + p0 + p01)
#----------------------------------------------------------------
# Matrix linear predictor
Z0 <- mc_id(massa) # Identidade
#----------------------------------------------------------------
# Ajuste
fit <-
mcglm(linear_pred = c(form.min_lat,
form.max_lat),
matrix_pred = list(c(Z0),
c(Z0)),
link = c("log", "log"),
variance = c("poisson_tweedie", "poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.2,
max_iter = 500,
tol = 1e-08),
#power_fixed = c(F,F),
data = massa)
#----------------------------------------------------------------
matplot(fit$IterationCovariance, type = 'l', xlim = c(1,490))
#----------------------------------------------------------------
# Resumo do modelo
summary(fit)
coef(fit, type = 'beta')
coef(fit, type = 'tau')
coef(fit, type = 'power')
#Poisson (ϕ = 1 & p = 1)
#----------------------------------------------------------------
#---------------------------------------------------------------
# RESÍDUOS
#---------------------------------------------------------------
# Obtenção dos resíduos
## chol(vcov) inversa
chol_inv <- Matrix::chol(fit$inv_C)
## Resíduos empilhados
res <- as.numeric(residuals(fit, type = 'raw'))
## Produto matricial
residuos <- as.numeric(chol_inv%*%res)
## Preditos
preditos <- fit$fitted
## Dataframe
res_pred <- data.frame(index = 1:nrow(massa),
resp = c(rep('min_lat', nrow(massa)),
rep('max_lat', nrow(massa))),
observado = c(massa$min_lat,massa$max_lat),
preditos = preditos,
pearson = residuos,
raw = res
)
#---------------------------------------------------------------
# HISTOGRAMAS
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
stat_function(fun = function(x) dnorm(x,
mean = mean,
sd = sd) * 1300,
color = "darkred", size = 1) +
ggtitle('Resíduo Pearson')
# Resíduo cru
mean2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[2]
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
stat_function(fun = function(x) dnorm(x,
mean = mean2,
sd = sd2) * 2000,
color = "darkred", size = 1) +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
#---------------------------------------------------------------
# HISTOGRAMAS
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo Pearson')
# Resíduo cru
mean2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[2]
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
#---------------------------------------------------------------
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
#---------------------------------------------------------------
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
#---------------------------------------------------------------
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
#---------------------------------------------------------------
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
#---------------------------------------------------------------
## Observado vs Predito
ggplot(data = res_pred, aes(x=observado,y=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(method = 'lm')+
xlab('Observado')+
ylab('Predito') + facet_wrap(~resp, scales = 'free') +
geom_abline(slope = 1, intercept = 1, col = 2, lwd = 1.1)
#---------------------------------------------------------------
resumo <- summary(fit)
# TAU E P PARA CADA RESPOSTA
round(resumo$`Resp.Variable 1`$Power,2)
round(resumo$`Resp.Variable 1`$tau,2)
round(resumo$`Resp.Variable 2`$Power,2)
round(resumo$`Resp.Variable 2`$tau,2)
# PARAMETROS DE REGRESSAO PARA CADA RESPOSTA
round(resumo$`Resp.Variable 1`$Regression,2)
round(resumo$`Resp.Variable 2`$Regression,2)
# INTERVALOS DE CONFIANÇA
confint(fit)[1:7,]
# INTERVALOS DE CONFIANÇA
confint(fit)[1:6,]
confint(fit)[7:12,]
confint(fit)[7:13,]
7
confint(fit)[13:17,]
confint(fit)[13:16,]
confint(fit)[13:15,]
# ANOVA
anova(fit)
# MANOVA
mc_manova(fit)
data.frame(beta_name = c('intercept',
'p23', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:6],
estim_max = coef(fit, type = 'beta')$Estimates[7:12])
predito <- function(p23, p015,
p5, p0, p01){
betas <- data.frame(beta_name = c('intercept',
'p23', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:6],
estim_max = coef(fit, type = 'beta')$Estimates[7:12])
min <- exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[4]  *  p015 +
betas$estim_min[5]  *  p5 +
betas$estim_min[6]  *  p0 +
betas$estim_min[7]  *  p01
)
max <- exp(
betas$estim_max[1] +           #intercept
betas$estim_max[2]  *  p23 +
betas$estim_max[4]  *  p015 +
betas$estim_max[5]  *  p5 +
betas$estim_max[6]  *  p0 +
betas$estim_max[7]  *  p01
)
out <- data.frame(min_lat = min,
max_lat = max)
return(out)
}
dados[sample(nrow(massa),1),c('p23', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p4   = 0,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 1)
predito(p23  = 0,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 1)
predito(p23  = 0,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 1)
dados[sample(nrow(massa),1),c('p23', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 1,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 1)
data.frame(beta_name = c('intercept',
'p23', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:6],
estim_max = coef(fit, type = 'beta')$Estimates[7:12])
p23=0
p015=0
p5=0
p0=0
p01=0
betas <- data.frame(beta_name = c('intercept',
'p23', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:6],
estim_max = coef(fit, type = 'beta')$Estimates[7:12])
exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[4]  *  p015 +
betas$estim_min[5]  *  p5 +
betas$estim_min[6]  *  p0 +
betas$estim_min[7]  *  p01
)
betas$estim_min[1]
betas$estim_min[2]
betas$estim_min[4]
betas$estim_min[5]
exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[3]  *  p015 +
betas$estim_min[4]  *  p5 +
betas$estim_min[5]  *  p0 +
betas$estim_min[6]  *  p01
)
max <- exp(
betas$estim_max[1] +           #intercept
betas$estim_max[2]  *  p23 +
betas$estim_max[3]  *  p015 +
betas$estim_max[4]  *  p5 +
betas$estim_max[5]  *  p0 +
betas$estim_max[6]  *  p01
)
out <- data.frame(min_lat = min,
max_lat = max)
return(out)
predito <- function(p23, p015,
p5, p0, p01){
betas <- data.frame(beta_name = c('intercept',
'p23', 'p015',
'p5', 'p0', 'p01'),
estim_min = coef(fit, type = 'beta')$Estimates[1:6],
estim_max = coef(fit, type = 'beta')$Estimates[7:12])
min <- exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  p23 +
betas$estim_min[3]  *  p015 +
betas$estim_min[4]  *  p5 +
betas$estim_min[5]  *  p0 +
betas$estim_min[6]  *  p01
)
max <- exp(
betas$estim_max[1] +           #intercept
betas$estim_max[2]  *  p23 +
betas$estim_max[3]  *  p015 +
betas$estim_max[4]  *  p5 +
betas$estim_max[5]  *  p0 +
betas$estim_max[6]  *  p01
)
out <- data.frame(min_lat = min,
max_lat = max)
return(out)
}
dados[sample(nrow(massa),1),c('p23', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p015 = 0,
p5   = 1,
p0   = 0,
p01  = 1)
dados[sample(nrow(massa),1),c('p23', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 0)
dados[sample(nrow(massa),1),c('p23', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 1,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 0)
dados[sample(nrow(massa),1),c('p23', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 1,
p015 = 0,
p5   = 1,
p0   = 0,
p01  = 1)
dados[sample(nrow(massa),1),c('p23', 'p015',
'p5', 'p0', 'p01',
'min_lat',
'max_lat')]
predito(p23  = 0,
p015 = 0,
p5   = 0,
p0   = 0,
p01  = 0)
