setwd("~/msc/4_latencias/fase2")
library(mcglm)
library(Matrix)
library(tidyverse)
dados <- read.csv2('latencias_1_NOVA.csv',  header = T,  sep = ',')
names(dados) <- c('n',  'code',  'inst',  'op0',  'op1',  'op2',
'lock',  'set_rex',  'segment',  'mem_xchg',
'p0156',  'p06',  'p23',  'p237',  'p4',  'p1',
'p15',  'p015',  'p5',  'p0',  'p05',  'p01',
'p6',  'min_lat',  'max_lat',  'count')
## Seleção das variaveis de interesse
dados <- select(dados,  n,  inst,  lock,  segment,
p0156,  p06,  p23, p237,  p4,  p1,  p15,  p0,  p05,
min_lat,  max_lat,  count)
## Transformando portas em binária
dados$p0156 <- as.factor(ifelse(dados$p0156 > 0,  1, 0))
dados$p06 <- as.factor(ifelse(dados$p06 > 0,  1, 0))
dados$p23 <- as.factor(ifelse(dados$p23 > 0,  1, 0))
dados$lock <- as.factor(ifelse(dados$lock > 0,  1, 0))
dados$p0 <- as.factor(ifelse(dados$p0 > 0,  1, 0))
dados$p237 <- as.factor(ifelse(dados$p237 > 0,  1, 0))
dados$p4 <- as.factor(ifelse(dados$p4 > 0,  1, 0))
dados$p1 <- as.factor(ifelse(dados$p1 > 0,  1, 0))
dados$p15 <- as.factor(ifelse(dados$p15 > 0,  1, 0))
dados$segment <- ifelse(dados$segment > 0,  1, 0)
form.min_lat <- min_lat ~ (lock + p0156 + p06 + p23 + p237 + p4 + p1 + p15 + p0)
form.max_lat <- max_lat ~ (lock + p0156 + p06 + p23 + p237 + p4 + p1 + p15 + p0)
Z0 <- mc_id(dados) # Identidade
fit <-
mcglm(linear_pred = c(form.min_lat,
form.max_lat),
matrix_pred = list(c(Z0),
c(Z0)),
link = c("log", "log"),
variance = c("poisson_tweedie", "poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 1,
max_iter = 600,
tol = 1e-4),
power_fixed = c(F,F),
data = dados)
matplot(fit$IterationCovariance, type = 'l', xlim = c(1,60))
summary(fit)
coef(fit, type = 'beta')
coef(fit, type = 'tau')
coef(fit, type = 'power')
#Poisson (ϕ = 1 & p = 1)
#Poisson (ϕ = 1 & p = 1)
#----------------------------------------------------------------
## chol(vcov) inversa
chol_inv <- Matrix::chol(fit$inv_C)
## Resíduos empilhados
res <- as.numeric(residuals(fit, type = 'raw'))
## Produto matricial
residuos <- as.numeric(chol_inv%*%res)
## Preditos
preditos <- fit$fitted
## Dataframe
res_pred <- data.frame(index = 1:nrow(dados),
resp = c(rep('min_lat', nrow(dados)),
rep('max_lat', nrow(dados))),
observado = c(dados$min_lat,dados$max_lat),
preditos = preditos,
pearson = residuos,
raw = res
)
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
stat_function(fun = function(x) dnorm(x,
mean = mean,
sd = sd) * 1400,
color = "darkred", size = 1) +
ggtitle('Resíduo Pearson')
mean2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[2]
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
stat_function(fun = function(x) dnorm(x,
mean = mean2,
sd = sd2) * 1700,
color = "darkred", size = 1) +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo Pearson')
mean2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[2]
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
## Observado vs Predito
ggplot(data = res_pred, aes(x=observado,y=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(method = 'lm')+
xlab('Observado')+
ylab('Predito') + facet_wrap(~resp, scales = 'free') +
geom_abline(slope = 1, intercept = 1, col = 2, lwd = 1.1)
## Observado vs Predito
ggplot(data = res_pred, aes(x=observado,y=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(method = 'lm')+
xlab('Observado')+
ylab('Predito') + facet_wrap(~resp, scales = 'free') +
geom_abline(slope = 1, intercept = 0, col = 2, lwd = 1.1)
dados$pred_min <- res_pred$preditos[1:nrow(dados)]
dados$pred_max <- res_pred$preditos[(nrow(dados)+1):nrow(res_pred)]
dados$pearson_min <- res_pred$pearson[1:nrow(dados)]
dados$pearson_max <- res_pred$pearson[(nrow(dados)+1):nrow(res_pred)]
dados$raw_min <- res_pred$raw[1:nrow(dados)]
dados$raw_max <- res_pred$raw[(nrow(dados)+1):nrow(res_pred)]
dados[,c(14,17,21,19,
15,18,22,20)]
mal_ajustados <- subset(dados,
raw_min > 3.5  |
raw_max > 3.5  |
raw_min < -3.5 |
raw_max < -3.5 |
pred_min > 40    |
pred_max > 40
)
nrow(mal_ajustados)
mal_ajustados <- subset(mal_ajustados, mal_ajustados$count == 0)
nrow(mal_ajustados)
mal_ajustados[,c(14,17,21,19,
15,18,22,20)]
mal_ajustados$n
massa <- subset(dados,  !(dados$n %in% mal_ajustados$n))
analista <- subset(dados,(dados$n %in% mal_ajustados$n))
nrow(dados)
nrow(massa) + nrow(analista)
form.min_lat <- min_lat ~ (lock + p0156 + p06 + p23 + p237 + p4 + p1 + p15 + p0
)
form.max_lat <- max_lat ~ (lock + p0156 + p06 + p23 + p237 + p4 + p1 + p15 + p0
)
Z0 <- mc_id(massa) # Identidade
fit <-
mcglm(linear_pred = c(form.min_lat,
form.max_lat),
matrix_pred = list(c(Z0),
c(Z0)),
link = c("log", "log"),
variance = c("poisson_tweedie", "poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 60,
tol = 1e-1),
power_fixed = c(F,F),
data = massa)
matplot(fit$IterationCovariance, type = 'l', xlim = c(1,60))
summary(fit)
coef(fit, type = 'beta')
coef(fit, type = 'tau')
coef(fit, type = 'power')
## chol(vcov) inversa
chol_inv <- Matrix::chol(fit$inv_C)
## Resíduos empilhados
res <- as.numeric(residuals(fit, type = 'raw'))
## Produto matricial
residuos <- as.numeric(chol_inv%*%res)
## Preditos
preditos <- fit$fitted
## Dataframe
res_pred <- data.frame(index = 1:nrow(massa),
resp = c(rep('min_lat', nrow(massa)),
rep('max_lat', nrow(massa))),
observado = c(massa$min_lat,massa$max_lat),
preditos = preditos,
pearson = residuos,
raw = res
)
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
stat_function(fun = function(x) dnorm(x,
mean = mean,
sd = sd) * 1400,
color = "darkred", size = 1) +
ggtitle('Resíduo Pearson')
mean2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[2]
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
stat_function(fun = function(x) dnorm(x,
mean = mean2,
sd = sd2) * 1700,
color = "darkred", size = 1) +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo Pearson')
mean2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[2]
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## qqplot
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
## Observado vs Predito
ggplot(data = res_pred, aes(x=observado,y=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(method = 'lm')+
xlab('Observado')+
ylab('Predito') + facet_wrap(~resp, scales = 'free') +
geom_abline(slope = 1, intercept = 1, col = 2, lwd = 1.1)
## Observado vs Predito
ggplot(data = res_pred, aes(x=observado,y=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(method = 'lm')+
xlab('Observado')+
ylab('Predito') + facet_wrap(~resp, scales = 'free') +
geom_abline(slope = 1, intercept = 0, col = 2, lwd = 1.1)
