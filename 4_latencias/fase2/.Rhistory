beta_max
# SAIDA DO MODELO
resumo <- summary(fit)
# TAU E P PARA CADA RESPOSTA
round(resumo$`Resp.Variable 1`$Power,2)
round(resumo$`Resp.Variable 1`$tau,2)
round(resumo$`Resp.Variable 2`$Power,2)
round(resumo$`Resp.Variable 2`$tau,2)
round(resumo$`Resp.Variable 1`$tau,2)
beta_min <- data.frame(name = rownames(resumo$`Resp.Variable 1`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 1`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[1:10,])[,1]),
ic_max = as.vector(exp(confint(fit)[1:10,])[,2]))
beta_max <- data.frame(name = rownames(resumo$`Resp.Variable 2`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 2`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[11:20,])[,1]),
ic_max = as.vector(exp(confint(fit)[11:20,])[,2]))
beta_min[,2:4] <- round(beta_min[,2:4],2)
beta_max[,2:4] <- round(beta_max[,2:4],2)
beta_min
beta_max
## p0156
paste0('Para cada unidade de aumento no uso da porta ', beta_min$name[3],
' a media da latencia minima fica multiplicada por ', beta_min$exp_est[3],
' mantendo fixos os valores das demais variáveis. Com 95% de confiança o intervalo entre ',
beta_min$ic_min[3], ' e ', beta_min$ic_max[3], ' realmente contém o parâmetro.')
# ANOVA
anova(fit)
# ANOVA
anova(fit)
mc_manova(fit)
predito <- function(lock, p0156, p06,
p23, p237, p4,
p1, p15, p0){
betas <- data.frame(beta_name = c('intercept',
'lock', 'p0156',
'p06', 'p23',
'p237', 'p4', 'p1',
'p15', 'p0'),
estim_min = coef(fit, type = 'beta')$Estimates[1:10],
estim_max = coef(fit, type = 'beta')$Estimates[11:20])
min <- exp(
betas$estim_min[1] +           #intercept
betas$estim_min[2]  *  lock  + #lock
betas$estim_min[3]  *  p0156 + #p0156
betas$estim_min[4]  *  p06   + #p06
betas$estim_min[5]  *  p23   + #p23
betas$estim_min[6]  *  p237  + #p237
betas$estim_min[7]  *  p4    + #p4
betas$estim_min[8]  *  p1    + #p1
betas$estim_min[9]  *  p15   + #p15
betas$estim_min[10] * p0)      #p0
max <- exp(
betas$estim_max[1] +            #intercept
betas$estim_max[2]  *  lock  +  #lock
betas$estim_max[3]  *  p0156 +  #p0156
betas$estim_max[4]  *  p06   +  #p06
betas$estim_max[5]  *  p23   +  #p23
betas$estim_max[6]  *  p237  +  #p237
betas$estim_max[7]  *  p4    +  #p4
betas$estim_max[8]  *  p1    +  #p1
betas$estim_max[9]  *  p15   +  #p15
betas$estim_max[10]  *  p0)      #p0
out <- data.frame(min_lat = min,
max_lat = max)
return(out)
}
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  0,
p06   =  1,
p23   =  0,
p237  =  0,
p4    =  0,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  0,
p06   =  1,
p23   =  0,
p237  =  0,
p4    =  0,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  0,
p06   =  1,
p23   =  1,
p237  =  0,
p4    =  0,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  0,
p06   =  3,
p23   =  0,
p237  =  0,
p4    =  0,
p1    =  0,
p15   =  0,
p0    =  0)
beta_min
beta_max
## chol(vcov) inversa
chol_inv <- Matrix::chol(fit$inv_C)
## Resíduos empilhados
res <- as.numeric(residuals(fit, type = 'raw'))
## Produto matricial
residuos <- as.numeric(chol_inv%*%res)
## Preditos
preditos <- fit$fitted
## Dataframe
res_pred <- data.frame(index = 1:nrow(massa),
resp = c(rep('min_lat', nrow(massa)),
rep('max_lat', nrow(massa))),
observado = c(massa$min_lat,massa$max_lat),
preditos = preditos,
pearson = residuos,
raw = res
)
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
stat_function(fun = function(x) dnorm(x,
mean = mean,
sd = sd) * 1400,
color = "darkred", size = 1) +
ggtitle('Resíduo Pearson')
mean2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[2]
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('Resíduos')+
ylab('Densidade')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
stat_function(fun = function(x) dnorm(x,
mean = mean2,
sd = sd2) * 1900,
color = "darkred", size = 1) +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
## Resíduo Pearson
mean = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[1]
sd = MASS::fitdistr(res_pred$pearson,
densfun = "normal")$estimate[2]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo Pearson')
mean2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$raw,
densfun = "normal")$estimate[2]
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2)
g1 <- ggplot(data = res_pred, aes(y=pearson,x=index))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g1
g1 <- ggplot(data = res_pred, aes(y=pearson,x=index))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=index))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
ggpubr::ggarrange(g1,g2, nrow = 2)
## Resíduos vs Predito
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'lm', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
## Observado vs Predito
ggplot(data = res_pred, aes(x=observado,y=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(method = 'lm')+
xlab('Observado')+
ylab('Predito') + facet_wrap(~resp, scales = 'free') +
geom_abline(slope = 1, intercept = 1, col = 2, lwd = 1.1)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  0,
p06   =  0,
p23   =  0,
p237  =  1,
p4    =  1,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  3,
p06   =  0,
p23   =  1,
p237  =  1,
p4    =  1,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  0,
p06   =  0,
p23   =  1,
p237  =  0,
p4    =  0,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  0,
p06   =  0,
p23   =  1,
p237  =  0,
p4    =  0,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  0,
p06   =  1,
p23   =  1,
p237  =  1,
p4    =  1,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  2,
p06   =  7,
p23   =  2,
p237  =  0,
p4    =  1,
p1    =  0,
p15   =  1,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  1,
p06   =  0,
p23   =  1,
p237  =  0,
p4    =  0,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  0,
p0156 =  1,
p06   =  0,
p23   =  1,
p237  =  0,
p4    =  0,
p1    =  0,
p15   =  0,
p0    =  0)
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
dados[sample(nrow(massa),1),c('lock',
'p0156',
'p06',
'p23',
'p237',
'p4',
'p1',
'p15',
'p0',
'min_lat',
'max_lat')]
predito(lock  =  1,
p0156 =  3,
p06   =  3,
p23   =  2,
p237  =  0,
p4    =  1,
p1    =  0,
p15   =  0,
p0    =  0)
