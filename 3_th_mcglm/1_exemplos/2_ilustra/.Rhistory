dados <- read.csv2("~/msc/3_th_mcglm/1_exemplos/0_dados/NBA.csv",
header = T,
sep = ";",
dec = ',')
dados$X6 <- sample(as.factor(rep(c('level_1', 'level_2',
'level_3', 'level_4',
'level_5', 'level_6'), 9)))
names(dados) <- c('x1', 'x2', 'y1', 'y2', 'y3', 'x3')
summary(dados)
disp <- function(form, data){
plot(form, data)
abline(lm(form, data), col = 2, lwd = 2)
}
x11()
par(mfrow = c(3,3))
disp(y1~x1, dados)
disp(y1~x2, dados)
plot(y1~x3, dados)
disp(y2~x1, dados)
disp(y2~x2, dados)
plot(y2~x3, dados)
disp(y3~x1, dados)
disp(y3~x2, dados)
plot(y3~x3, dados)
cor1 <- cor(dados[,-ncol(dados)])
par(mfrow = c(1,1))
corrplot::corrplot.mixed(cor1,
lower = 'number',
upper = 'ellipse')
library(mcglm)
library(Matrix)
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
dados <- read.csv2("~/msc/3_th_mcglm/1_exemplos/0_dados/NBA.csv",
header = T,
sep = ";",
dec = ',')
dados$X6 <- sample(as.factor(rep(c('nivel_1', 'nivel_2',
'nivel_3', 'nivel_4',
'nivel_5', 'nivel_6'), 9)))
names(dados) <- c('x1', 'x2', 'y1', 'y2', 'y3', 'x3')
library(mcglm)
library(car)
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
# Dados
?labestData::PaulaEg1.12.5
dados <- labestData::PaulaEg1.12.5[ , -1]
# MODELO SEM INTERAÇÕES
form  <- cons ~ (taxa + licen + renda + estr)
# GLM
m1 <- glm(formula = form, data = dados)
?contrasts
# Estatístistica F.
m0 <- lm(Sepal.Length ~ Species, data = iris)
anova(m0)
attr(model.matrix(m0), "contr")
attr(model.matrix(m0), "contr")$Species
m0
m0$model
m0$model$Species
C(fac, ctr)
ctr <- attr(model.matrix(m0), "contr")$Species
fac <- m0$model$Species
C(fac, ctr)
C(fac, ctr)==
c(fac, ctr)
c(fac, ctr)
C(fac, ctr),
C(fac, ctr)
contrasts(C(fac, ctr), contrasts = TRUE)
t(contrasts(C(fac, ctr), contrasts = TRUE))
ls("package:car")
# Estatístistica F.
m0 <- lm(Sepal.Length ~ Species, data = iris)
anova(m0)
m0
names(iris)
# Estatístistica F.
m0 <- lm(Sepal.Length ~ Species, data = iris)
anova(m0)
coef(m0)
L %*% coef(m0)
L
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
L
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L)
# Estatística F.
est <- L %*% coef(m0)
sigma <- L %*% vcov(m0) %*% t(L)
(t(est) %*% solve(sigma) %*% est)/nrow(L)
?lm
# Estatístistica F.
m0 <- lm(Sepal.Length ~ Species, data = iris, contrasts = 'contr.helmert')
contrasts(iris$Species) = contr.helmert(3)
contrasts(iris$Species)
iris$Species
contrasts(iris$Species) = contr.helmert(4)
contrasts(iris$Species) = contr.helmert(1)
contrasts(iris$Species) = contr.helmert(2)
contrasts(iris$Species) = contr.helmert(6)
contrasts(iris$Species) = contr.helmert(3)
contrasts(iris$Species) = contr.helmert(3)
m0 <- lm(Sepal.Length ~ Species, data = iris, contrasts = 'contr.helmert')
m0 <- lm(Sepal.Length ~ Species, data = iris)
anova(m0)
m0
ctr <- attr(model.matrix(m0), "contr")$Species
ctr
fac <- m0$model$Species
fac
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
L
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L)
# Estatística F.
est <- L %*% coef(m0)
sigma <- L %*% vcov(m0) %*% t(L)
(t(est) %*% solve(sigma) %*% est)/nrow(L)
contrasts(iris$Species) = contr.sum(3)
contrasts(iris$Species)
m0 <- lm(Sepal.Length ~ Species, data = iris)
anova(m0)
ctr <- attr(model.matrix(m0), "contr")$Species
fac <- m0$model$Species
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
L
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L)
# Estatística F.
est <- L %*% coef(m0)
sigma <- L %*% vcov(m0) %*% t(L)
(t(est) %*% solve(sigma) %*% est)/nrow(L)
iris$teste <- c('a','b','c')
iris$teste
iris
contrasts(iris$teste) = contr.helmert(3)
contrasts(iris$teste)
as.factor(iris$teste)
iris$teste <- as.factor(iris$teste)
contrasts(iris$Species) = contr.sum(3)
contrasts(iris$teste) = contr.helmert(3)
contrasts(iris$Species)
contrasts(iris$teste)
m0 <- lm(Sepal.Length ~ Species + teste, data = iris)
anova(m0)
ctr <- attr(model.matrix(m0), "contr")$Species
ctr
attr(model.matrix(m0), "contr")
y <- rnorm(1000,10,3)
q <- quantile(y, probs = c(0.25,0.5,0.75))
x <- ifelse(y<=q[1], 'a', NA)
x <- ifelse(y>q[1] & y<= q[2], 'b', x)
x <- ifelse(y>q[2] & y<= q[3], 'c', x)
x <- ifelse(y>q[3], 'd', x)
df <- data.frame(y = y,
x = x)
head(df)
ggplot(data = df,
mapping = aes(x = x,
y = y)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1,
fill = 'white')+
stat_summary(fun=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab("x") +
ylab("y") +
ggtitle("Boxplots")+
theme_bw() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
library(ggplot2)
q <- quantile(y, probs = c(0.25,0.5,0.75))
x <- ifelse(y<=q[1], 'a', NA)
x <- ifelse(y>q[1] & y<= q[2], 'b', x)
x <- ifelse(y>q[2] & y<= q[3], 'c', x)
x <- ifelse(y>q[3], 'd', x)
df <- data.frame(y = y,
x = x)
head(df)
ggplot(data = df,
mapping = aes(x = x,
y = y)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1,
fill = 'white')+
stat_summary(fun=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab("x") +
ylab("y") +
ggtitle("Boxplots")+
theme_bw() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
form  <- y ~ x
m_treatment <- glm(y~x, df)
glm(y~x, df)
y
x
df
m_treatment <- glm(form, df)
m_treatment <- glm(form, df, family = 'gaussian')
m_treatment
model.matrix(m_treatment)
ctr <- attr(model.matrix(m_treatment), "contr")$x
ctr
ctr <- attr(model.matrix(m_treatment), "contr")$x
ctr
attr(model.matrix(m_treatment), "contr")
m_treatment$model
m_treatment$model$x
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
L
# Estatística F.
linearHypothesis(m_treatment, hypothesis.matrix = L)
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
# Estatística F.
linearHypothesis(m_treatment, hypothesis.matrix = L)
L
m_treatment
m_treatment <- glm(form, df, family = 'gaussian')
ctr <- attr(model.matrix(m_treatment), "contr")$x
fac <- m_treatment$model$x
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
L
# Estatística F.
linearHypothesis(m_treatment, hypothesis.matrix = L)
# Estatística F.
est <- L %*% coef(m0)
# Estatística F.
est <- L %*% coef(m_treatment)
sigma <- L %*% vcov(m_treatment) %*% t(L)
(t(est) %*% solve(sigma) %*% est)/nrow(L)
est
coef(m_treatment)
L
y <- rnorm(1000,10,3)
q <- quantile(y, probs = c(0.25,0.5,0.75))
x <- ifelse(y<=q[1], 'a', NA)
x <- ifelse(y>q[1] & y<= q[2], 'b', x)
x <- ifelse(y>q[2] & y<= q[3], 'c', x)
x <- ifelse(y>q[3], 'd', x)
df <- data.frame(y = y,
x = x)
head(df)
ggplot(data = df,
mapping = aes(x = x,
y = y)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1,
fill = 'white')+
stat_summary(fun=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab("x") +
ylab("y") +
ggtitle("Boxplots")+
theme_bw() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
form  <- y ~ x
m_treatment <- glm(form, df, family = 'gaussian')
attr(model.matrix(m_treatment), "contr")$x
m_treatment$model$x
fac <- m_treatment$model$x
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
L
# Estatística F.
linearHypothesis(m_treatment, hypothesis.matrix = L)
# Estatística F.
est <- L %*% coef(m_treatment)
sigma <- L %*% vcov(m_treatment) %*% t(L)
(t(est) %*% solve(sigma) %*% est)/nrow(L)
contrasts(iris$Species) = contr.treatment()
contrasts(iris$Species) = contr.treatment(3)
contrasts(iris$Species)
# Estatístistica F.
m0 <- lm(Sepal.Length ~ Species, data = iris)
anova(m0)
ctr <- attr(model.matrix(m0), "contr")$Species
fac <- m0$model$Species
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L)
# Estatístistica F.
m0 <- lm(Sepal.Length ~ Species, data = iris)
anova(m0)
ctr <- attr(model.matrix(m0), "contr")$Species
fac <- m0$model$Species
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L)
# Estatística F.
est <- L %*% coef(m0)
sigma <- L %*% vcov(m0) %*% t(L)
(t(est) %*% solve(sigma) %*% est)/nrow(L)
# Estatístistica F.
m0 <- lm(y ~ x, data = df)
anova(m0)
ctr <- attr(model.matrix(m0), "contr")$Species
attr(model.matrix(m0), "contr")$Species
ctr <- attr(model.matrix(m0), "contr")$x
ctr
fac <- m0$model$x
fac
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
L
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L)
# Estatística F.
est <- L %*% coef(m0)
sigma <- L %*% vcov(m0) %*% t(L)
(t(est) %*% solve(sigma) %*% est)/nrow(L)
glm(y ~ x, data = df)
# Estatístistica F.
m0 <- glm(y ~ x, data = df)
anova(m0)
ctr <- attr(model.matrix(m0), "contr")$x
fac <- m0$model$x
L <- t(contrasts(C(fac, ctr), contrasts = TRUE))
L
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L)
# Estatística F.
est <- L %*% coef(m0)
sigma <- L %*% vcov(m0) %*% t(L)
(t(est) %*% solve(sigma) %*% est)/nrow(L)
lm(y ~ x, data = df)
glm(y ~ x, data = df)
# Estatístistica F.
m0 <- lm(y ~ x, data = df)
anova(m0)
m0 <- lm(y ~ x, data = df)
m1 <- glm(y ~ x, data = df)
m0 <- lm(y ~ x, data = df)
m1 <- glm(y ~ x, data = df)
m0
ctr0 <- attr(model.matrix(m0), "contr")$x
fac0 <- m0$model$x
L <- t(contrasts(C(fac0, ctr0), contrasts = TRUE))
L
ctr1 <- attr(model.matrix(m1), "contr")$x
fac1 <- m1$model$x
L <- t(contrasts(C(fac1, ctr1), contrasts = TRUE))
L
ctr0
ctr1
fac0
fac1
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L)
linearHypothesis(m1, hypothesis.matrix = L)
L %*% coef(m0)
L %*% coef(m1)
vcov(m0)
vcov(m1)
L %*% vcov(m0) %*% t(L)
L %*% vcov(m1) %*% t(L)
m0 <- lm(y ~ x, data = df)
m1 <- glm(y ~ x, data = df)
ctr0 <- attr(model.matrix(m0), "contr")$x
fac0 <- m0$model$x
m0 <- lm(y ~ x, data = df)
m1 <- glm(y ~ x, data = df)
ctr0 <- attr(model.matrix(m0), "contr")$x
fac0 <- m0$model$x
L0 <- t(contrasts(C(fac0, ctr0), contrasts = TRUE))
ctr1 <- attr(model.matrix(m1), "contr")$x
fac1 <- m1$model$x
L1 <- t(contrasts(C(fac1, ctr1), contrasts = TRUE))
L0
y <- rnorm(1000,10,3)
q <- quantile(y, probs = c(0.25,0.5,0.75))
x <- ifelse(y<=q[1], 'a', NA)
x <- ifelse(y>q[1] & y<= q[2], 'b', x)
x <- ifelse(y>q[2] & y<= q[3], 'c', x)
x <- ifelse(y>q[3], 'd', x)
df <- data.frame(y = y,
x = x)
head(df)
m0 <- lm(y ~ x, data = df)
m1 <- glm(y ~ x, data = df)
m0
m1
m0==m1
ctr0 <- attr(model.matrix(m0), "contr")$x
fac0 <- m0$model$x
L0 <- t(contrasts(C(fac0, ctr0), contrasts = TRUE))
ctr1 <- attr(model.matrix(m1), "contr")$x
fac1 <- m1$model$x
L1 <- t(contrasts(C(fac1, ctr1), contrasts = TRUE))
ctr0
ctr1
fac0
fac1
L0
L1
# Estatística F.
est0 <- L0 %*% coef(m0)
est1 <- L1 %*% coef(m0)
est0
est1
sigma0 <- L0 %*% vcov(m0) %*% t(L0)
sigma1 <- L1 %*% vcov(m1) %*% t(L0)
sigma0
sigma1
(t(est) %*% solve(sigma) %*% est)/nrow(L)
(t(est0) %*% solve(sigma0) %*% est0)/nrow(L0)
L0 %*% coef(m0)
t(L0 %*% coef(m0))
t(L0 %*% coef(m0)) %*% (L0%*%sigma0%*%t(L0)) %*% (L0 %*% coef(m0))
sigma0
L0
t(L0 %*% coef(m0))
(L0 %*% coef(m0)) %*% (t(L0)%*%sigma0%*%t(L0)) %*% t(L0 %*% coef(m0))
L0 %*% coef(m0)
t(L0)
(L0)%*%sigma0
sigma0
L0
L0 %*% coef(m0)
L0 %*% coef(m0)
t(L0 %*% coef(m0))
vcov(m0)
L0 %*% vcov(m0)
L0 %*% vcov(m0) %*% t(L0)
solve(L0 %*% vcov(m0) %*% t(L0))
t(L0 %*% coef(m0))
t(L0 %*% coef(m0)) %*% solve(L0 %*% vcov(m0) %*% t(L0))
t(L0 %*% coef(m0)) %*% solve(L0 %*% vcov(m0) %*% t(L0)) %*% t(L0 %*% coef(m0))
t(L0 %*% coef(m0)) %*% solve(L0 %*% vcov(m0) %*% t(L0))
t(L0 %*% coef(m0))
(L0 %*% coef(m0))
t(L0 %*% coef(m0)) %*% (solve(L0 %*% vcov(m0) %*% t(L0))) %*% (L0 %*% coef(m0))
(t(est0) %*% solve(sigma0) %*% est0)/nrow(L0)
(t(est0) %*% solve(sigma0) %*% est0)/nrow(L0)
t(L0 %*% coef(m0)) %*% (solve(L0 %*% vcov(m0) %*% t(L0))) %*% (L0 %*% coef(m0))
t(L1 %*% coef(m1)) %*% (solve(L1 %*% vcov(m1) %*% t(L1))) %*% (L1 %*% coef(m1))
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L)
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L0)
linearHypothesis(m1, hypothesis.matrix = L1)
t(L0 %*% coef(m0)) %*% (solve(L0 %*% vcov(m0) %*% t(L0))) %*% (L0 %*% coef(m0))
t(L1 %*% coef(m1)) %*% (solve(L1 %*% vcov(m1) %*% t(L1))) %*% (L1 %*% coef(m1))
# Estatística F.
linearHypothesis(m0, hypothesis.matrix = L0)
linearHypothesis(m1, hypothesis.matrix = L1)
y <- rnorm(1000,10,3)
q <- quantile(y, probs = c(0.25,0.5,0.75))
x <- ifelse(y<=q[1], 'a', NA)
x <- ifelse(y>q[1] & y<= q[2], 'b', x)
x <- ifelse(y>q[2] & y<= q[3], 'c', x)
x <- ifelse(y>q[3], 'd', x)
df <- data.frame(y = y,
x = x)
head(df)
ggplot(data = df,
mapping = aes(x = x,
y = y)) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1,
fill = 'white')+
stat_summary(fun=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab("x") +
ylab("y") +
ggtitle("Boxplots")+
theme_bw() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
m1 <- glm(y ~ x, data = df)
m1
ctr1 <- attr(model.matrix(m1), "contr")$x
ctr1
fac1
L1
