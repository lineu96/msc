data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
## Tipo II
Anova(m1, type = 'II', test.statistic = 'Wald')
mc_anova_II(m2)[[1]]
mc_manova_II(m2)
## Tipo III
Anova(m1, type = 'III', test.statistic = 'Wald')
mc_anova_III(m2)[[1]]
mc_manova_III(m2)
linearHypothesis(m1, c("(Intercept) = 0",
"x1 = 0",
"x2 = 0"))
mc_linear_hypothesis(object =  m2,
hypothesis = c('beta10 = 0',
'beta11 = 0',
'beta12 = 0'))
linearHypothesis(m1, c("(Intercept) = 0.13"))
mc_linear_hypothesis(object =  m2,
hypothesis = c('beta10 = 0.13'))
mc_linear_hypothesis(object =  fit,
hypothesis = c('beta11 = beta21',
'beta21 = beta31'))
library(mcglm)
library(Matrix)
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
#---------------------------------------------------------------
dados <- read.csv2("~/msc/3_th_mcglm/1_exemplos/0_dados/dados_ovelhas.csv",
header = T,
sep = ";",
dec = ',')
dados2 <- dados[,c(1,2,3,4,
14,15,17,21,
7,9,10,11)]
dados2$momento <- ordered(dados2$tempo,
levels=c("Antes", "Durante", "Depois"))
form.ncorpo  <- ncorpo  ~ (sessao + tempo + linhagem)
form.ncorpo2 <- ncabeca ~ (sessao + tempo + linhagem)
form.ncorpo3 <- norelha ~ (sessao + tempo + linhagem)
Z0 <- mc_id(dados2) # Identidade
Z1 <- mc_mixed(~0 + factor(animal), data = dados2) # Animal
dados2$comb <- paste(dados2$animal, dados2$sessao)
Z2 <- mc_mixed(~0 + comb, data = dados2) # Animal Momento
fit_jointP <-
mcglm(linear_pred = c(form.ncorpo,
form.ncorpo2,
form.ncorpo3),
matrix_pred = list(c(Z0, Z1, Z2),
c(Z0, Z1, Z2),
c(Z0, Z1, Z2)),
link = c("log","log","log"),
variance = c("poisson_tweedie",
"poisson_tweedie",
"poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
power_fixed = c(F, F, F),
data = dados2)
fit_jointP$beta_names[[1]]
summary(fit_jointP)
mc_anova_pc <- anova(fit_jointP)
i = 1
mc_anova_pc[[i]]
mc_anova_I(fit_jointP)[[i]]
mc_anova_II(fit_jointP)[[i]]
mc_anova_III(fit_jointP)[[i]]
mc_anova_disp(fit_jointP,
p_var = list(c(0,1,2),
c(0,1,2),
c(0,1,2)),
names = list(c('t1', 't2', 't3'),
c('t1', 't2', 't3'),
c('t1', 't2', 't3')))
mc_manova(fit_jointP)
mc_manova_I(fit_jointP)
mc_manova_II(fit_jointP)
mc_manova_III(fit_jointP)
mc_manova_disp(fit_jointP,
p_var = c(0,1,2),
names = c('t1', 't2', 't3'))
parametros <- coef(fit_jointP, type = 'beta')
parametros <- coef(fit_jointP, type = 'beta')
parametros$beta_names <- Reduce(c,fit_jointP$beta_names)
parametros
mc_manova_III(fit_jointP)
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('beta15 = 0',
'beta25 = 0',
'beta35 = 0'))
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('beta10 = beta20',
'beta10 = beta20'))
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('beta10 = beta20',
'beta10 = beta30'))
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('tau12 = 0',
'tau22 = 0',
'tau32 = 0'))
coef(fit_jointP
)
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('power11 = 1',
'power21 = 1',
'power31 = 1'))
form.ncorpo  <- ncorpo  ~ (sessao + tempo + linhagem)^2
form.ncorpo2 <- ncabeca ~ (sessao + tempo + linhagem)^2
form.ncorpo3 <- norelha ~ (sessao + tempo + linhagem)^2
Z0 <- mc_id(dados2) # Identidade
Z1 <- mc_mixed(~0 + factor(animal), data = dados2) # Animal
dados2$comb <- paste(dados2$animal, dados2$sessao)
Z2 <- mc_mixed(~0 + comb, data = dados2) # Animal Momento
fit_jointP <-
mcglm(linear_pred = c(form.ncorpo,
form.ncorpo2,
form.ncorpo3),
matrix_pred = list(c(Z0, Z1, Z2),
c(Z0, Z1, Z2),
c(Z0, Z1, Z2)),
link = c("log","log","log"),
variance = c("poisson_tweedie",
"poisson_tweedie",
"poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
power_fixed = c(F, F, F),
data = dados2)
fit_jointP$beta_names[[1]]
summary(fit_jointP)
mc_anova_pc <- anova(fit_jointP)
i = 1
mc_anova_pc[[i]]
mc_anova_I(fit_jointP)[[i]]
mc_anova_II(fit_jointP)[[i]]
mc_anova_III(fit_jointP)[[i]]
mc_anova_disp(fit_jointP,
p_var = list(c(0,1,2),
c(0,1,2),
c(0,1,2)),
names = list(c('t1', 't2', 't3'),
c('t1', 't2', 't3'),
c('t1', 't2', 't3')))
mc_manova(fit_jointP)
mc_manova_I(fit_jointP)
mc_manova_II(fit_jointP)
mc_manova_III(fit_jointP)
mc_manova_disp(fit_jointP,
p_var = c(0,1,2),
names = c('t1', 't2', 't3'))
parametros <- coef(fit_jointP, type = 'beta')
parametros$beta_names <- Reduce(c,fit_jointP$beta_names)
parametros
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('beta15 = 0',
'beta25 = 0',
'beta35 = 0'))
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('beta15 = 0',
'beta25 = 0',
'beta35 = 0'))
mc_manova_III(fit_jointP)
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('beta10 = beta20',
'beta10 = beta30'))
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('tau12 = 0',
'tau22 = 0',
'tau32 = 0'))
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('power11 = 1',
'power21 = 1',
'power31 = 1'))
library(mcglm)
library(car)
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
# Dados
?labestData::PaulaEg1.12.5
dados <- labestData::PaulaEg1.12.5[ , -1]
# MODELO SEM INTERAÇÕES
form  <- cons ~ (taxa + licen + renda + estr)
m1 <- glm(formula = form, data = dados)
Z0 <- mc_id(dados) # Identidade
m2 <- mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
data = dados)
# Estimativas
data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
Anova(m1, type = 'II', test.statistic = 'Wald')
Anova(m1, type = 'II', test.statistic = 'Wald')
## Tipo III
Anova(m1, type = 'III', test.statistic = 'Wald')
mc_anova_II(m2)[[1]]
mc_anova_III(m2)[[1]]
mc_manova_II(m2)
mc_manova_III(m2)
## Tipo II
Anova(m1, type = 'II', test.statistic = 'Wald')
## Tipo III
Anova(m1, type = 'III', test.statistic = 'Wald')
mc_anova_II(m2)[[1]]
mc_anova_III(m2)[[1]]
mc_manova_II(m2)
mc_manova_III(m2)
## Testando se todos os parametros sao 0
linearHypothesis(m1, c("(Intercept) = 0",
"taxa = 0",
"licen = 0",
"renda = 0",
"estr = 0"))
coef(m2, type = 'beta')
parametros <- coef(m2, type = 'beta')
parametros$beta_names <- Reduce(c,m2$beta_names)
parametros
## Testando se todos os parametros sao 0
linearHypothesis(m1, c("(Intercept) = 0",
"taxa = 0",
"licen = 0",
"renda = 0",
"estr = 0"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta10 = 0',
'beta11 = 0',
'beta12 = 0',
'beta13 = 0',
'beta14 = 0'))
## Testando se o intercepto é igual a 380
linearHypothesis(m1, c("(Intercept) = 380"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta10 = 380'))
## Testando se beta taxa = beta licen
linearHypothesis(m1, c("taxa = licen"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta11 = beta12'))
## Testando se beta taxa = beta licen e beta renda = beta estr
linearHypothesis(m1, c("taxa = licen",
"renda = estr"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta11 = beta12',
'beta13 = beta14' ))
form2  <- cons ~ (taxa + licen + renda + estr)^2
# GLM
m1 <- glm(formula = form2, data = dados)
# McGLM
Z0 <- mc_id(dados) # Identidade
m2 <- mcglm(linear_pred = c(form2),
matrix_pred = list(c(Z0)),
data = dados)
# Estimativas
data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
# MODELO COM INTERAÇÕES
form2  <- cons ~ (taxa + licen + renda + estr)^2
# GLM
m1 <- glm(formula = form2, data = dados)
# McGLM
Z0 <- mc_id(dados) # Identidade
m2 <- mcglm(linear_pred = c(form2),
matrix_pred = list(c(Z0)),
data = dados)
# Estimativas
data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
Anova(m1, type = 'III', test.statistic = 'Wald')
mc_anova_III(m2)[[1]]
mc_manova_III(m2)
mc_anova_III(m2)[[1]] == mc_manova_III(m2)
Anova(m1, type = 'II', test.statistic = 'Wald')
mc_manova_III(m2)
Anova(m1, type = 'II', test.statistic = 'Wald')
mc_anova_II(m2)[[1]]
linearHypothesis(m1, c("taxa = 0",
"taxa:licen = 0",
"taxa:renda = 0",
"taxa:estr = 0"))
## Testando se todos os parametros que tem estr são iguais a 0
linearHypothesis(m1, c("estr = 0",
"taxa:estr = 0",
"licen:estr = 0",
"renda:estr = 0"))
parametros <- coef(m2, type = 'beta')
parametros$beta_names <- Reduce(c,m2$beta_names)
parametros
## Testando se todos os parametros que tem estr são iguais a 0
linearHypothesis(m1, c("estr = 0",
"taxa:estr = 0",
"licen:estr = 0",
"renda:estr = 0"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta14 = 0',
'beta17 = 0',
'beta19 = 0',
'beta110 = 0'))
## Testando se o intercepto é igual a 148
linearHypothesis(m1, c("(Intercept) = 148"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta10 = 148'))
## Testando se beta taxa = beta licen
linearHypothesis(m1, c("taxa:licen = taxa:renda"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta15 = beta16'))
## Testando se beta taxa = beta licen e beta renda = beta estr
linearHypothesis(m1, c("taxa = licen",
"renda = estr"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta11 = beta12',
'beta13 = beta14' ))
linearHypothesis(m1, c("taxa = licen",
"taxa = renda",
"taxa = estr"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta11 = beta12',
'beta11 = beta13',
'beta11 = beta14' ))
library(mcglm)
library(Matrix)
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
#---------------------------------------------------------------
dados <- read.csv2("~/msc/3_th_mcglm/1_exemplos/0_dados/dados_ovelhas.csv",
header = T,
sep = ";",
dec = ',')
dados2 <- dados[,c(1,2,3,4,
14,15,17,21,
7,9,10,11)]
dados2$momento <- ordered(dados2$tempo,
levels=c("Antes", "Durante", "Depois"))
form.ncorpo  <- ncorpo  ~ (sessao + tempo + linhagem)
form.ncorpo2 <- ncabeca ~ (sessao + tempo + linhagem)
form.ncorpo3 <- norelha ~ (sessao + tempo + linhagem)
Z0 <- mc_id(dados2) # Identidade
Z1 <- mc_mixed(~0 + factor(animal), data = dados2) # Animal
dados2$comb <- paste(dados2$animal, dados2$sessao)
Z2 <- mc_mixed(~0 + comb, data = dados2) # Animal Momento
fit_jointP <-
mcglm(linear_pred = c(form.ncorpo,
form.ncorpo2,
form.ncorpo3),
matrix_pred = list(c(Z0, Z1, Z2),
c(Z0, Z1, Z2),
c(Z0, Z1, Z2)),
link = c("log","log","log"),
variance = c("poisson_tweedie",
"poisson_tweedie",
"poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 20,
tol = 1e-01),
power_fixed = c(F, F, F),
data = dados2)
fit_jointP$beta_names[[1]]
summary(fit_jointP)
mc_anova_pc <- anova(fit_jointP)
i = 1
mc_anova_pc[[i]]
mc_anova_I(fit_jointP)[[i]]
mc_anova_II(fit_jointP)[[i]]
mc_anova_III(fit_jointP)[[i]]
mc_anova_disp(fit_jointP,
p_var = list(c(0,1,2),
c(0,1,2),
c(0,1,2)),
names = list(c('t1', 't2', 't3'),
c('t1', 't2', 't3'),
c('t1', 't2', 't3')))
mc_manova(fit_jointP)
mc_manova_I(fit_jointP)
mc_manova_II(fit_jointP)
mc_manova_III(fit_jointP)
mc_manova_disp(fit_jointP,
p_var = c(0,1,2),
names = c('t1', 't2', 't3'))
parametros
parametros$Estimates=round(parametros$Estimates,3)
parametros
parametros <- coef(fit_jointP, type = 'beta')
parametros$beta_names <- Reduce(c,fit_jointP$beta_names)
parametros$Estimates=round(parametros$Estimates,3)
parametros
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('beta15 = 0.148',
'beta25 = -0.007',
'beta35 = 0.348'))
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('beta15 = 0.1',
'beta25 = 0',
'beta35 = 0.3'))
mc_linear_hypothesis(object =  fit_jointP,
hypothesis = c('beta15 = 0',
'beta25 = 0',
'beta35 = 0'))
library(mcglm)
library(car)
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
# Dados
?labestData::PaulaEg1.12.5
dados <- labestData::PaulaEg1.12.5[ , -1]
# MODELO SEM INTERAÇÕES
form  <- cons ~ (taxa + licen + renda + estr)
# GLM
m1 <- glm(formula = form, data = dados)
# McGLM
Z0 <- mc_id(dados) # Identidade
m2 <- mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
data = dados)
# Estimativas
data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
## Tipo II
Anova(m1, type = 'II', test.statistic = 'Wald')
mc_anova_II(m2)[[1]]
mc_manova_III(m2)
## Tipo II
Anova(m1, type = 'II', test.statistic = 'Wald')
## Tipo III
Anova(m1, type = 'III', test.statistic = 'Wald')
mc_anova_III(m2)[[1]]
mc_manova_III(m2)
mc_anova_III(m2)[[1]] == mc_manova_III(m2)
## Testando se todos os parametros sao 0
linearHypothesis(m1, c("(Intercept) = 0",
"taxa = 0",
"licen = 0",
"renda = 0",
"estr = 0"))
coef(m2, type = 'beta')
parametros$beta_names <- Reduce(c,m2$beta_names)
parametros
parametros <- coef(m2, type = 'beta')
parametros$beta_names <- Reduce(c,m2$beta_names)
parametros
## Testando se todos os parametros sao 0
linearHypothesis(m1, c("(Intercept) = 0",
"taxa = 0",
"licen = 0",
"renda = 0",
"estr = 0"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta10 = 0',
'beta11 = 0',
'beta12 = 0',
'beta13 = 0',
'beta14 = 0'))
## Testando se o intercepto é igual a 380
linearHypothesis(m1, c("(Intercept) = 380"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta10 = 380'))
## Testando se beta taxa = beta licen
linearHypothesis(m1, c("taxa = licen"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta11 = beta12'))
## Testando se beta taxa = beta licen e beta renda = beta estr
linearHypothesis(m1, c("taxa = licen",
"renda = estr"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta11 = beta12',
'beta13 = beta14' ))
coef(m2
)
# MODELO COM INTERAÇÕES
form2  <- cons ~ (taxa + licen + renda + estr)^2
# GLM
m1 <- glm(formula = form2, data = dados)
# McGLM
Z0 <- mc_id(dados) # Identidade
m2 <- mcglm(linear_pred = c(form2),
matrix_pred = list(c(Z0)),
data = dados)
# Estimativas
data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
## Tipo III
Anova(m1, type = 'III', test.statistic = 'Wald')
mc_anova_III(m2)[[1]]
mc_manova_III(m2)
mc_anova_III(m2)[[1]] == mc_manova_III(m2)
## Tipo III
Anova(m1, type = 'III', test.statistic = 'Wald')
Anova(m1, type = 'II', test.statistic = 'Wald')
mc_anova_II(m2)[[1]]
linearHypothesis(m1, c("taxa = 0",
"taxa:licen = 0",
"taxa:renda = 0",
"taxa:estr = 0"))
linearHypothesis(m1, c("licen = 0",
"taxa:licen = 0",
"licen:renda = 0",
"licen:estr = 0"))
parametros <- coef(m2, type = 'beta')
parametros$beta_names <- Reduce(c,m2$beta_names)
parametros
parametros
linearHypothesis(m1, c("estr = 0",
"taxa:estr = 0",
"licen:estr = 0",
"renda:estr = 0"))
## Testando se todos os parametros que tem estr são iguais a 0
linearHypothesis(m1, c("estr = 0",
"taxa:estr = 0",
"licen:estr = 0",
"renda:estr = 0"))
mc_linear_hypothesis(object =  m2,
hypothesis =  c('beta14 = 0',
'beta17 = 0',
'beta19 = 0',
'beta110 = 0'))
