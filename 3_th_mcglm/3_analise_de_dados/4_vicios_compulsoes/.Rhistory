ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
dados2$pred_min <- res_pred$preditos[1:nrow(dados2)]
dados2$pred_max <- res_pred$preditos[(nrow(dados2)+1):nrow(res_pred)]
dados2$pearson_min <- res_pred$pearson[1:nrow(dados2)]
dados2$pearson_max <- res_pred$pearson[(nrow(dados2)+1):nrow(res_pred)]
dados2$raw_min <- res_pred$raw[1:nrow(dados2)]
dados2$raw_max <- res_pred$raw[(nrow(dados2)+1):nrow(res_pred)]
mal_ajustados <- subset(dados2,
pearson_min   >  3    |
pearson_min < -3    |
pearson_max  >  3 |
pearson_max  < -3 #|
#pred_min > 25|
#pred_max > 15
)
nrow(mal_ajustados)
# SAIDA DO MODELO
resumo <- summary(fit)
betas_min <- round(resumo[[1]]$Regression, 4)
betas_max <- round(resumo[[2]]$Regression, 4)
setwd("~/msc/3_th_mcglm/3_analise_de_dados/3_fodmaps")
library(mcglm)
library(Matrix)
library(tidyverse)
dados <- read.csv2("dados1.csv")
dados$dor_abd2 <- ifelse(dados$dor_abd == 1, 0, 1)
#azia
#refluxo
#fome_dor
dados$nausea2 <- ifelse(dados$nausea == 1, 0, 1)
dados$ronco2 <- ifelse(dados$ronco == 1, 0, 1)
#ar
dados$arroto2 <- ifelse(dados$arroto == 1, 0, 1)
#gases
dados$constip2 <- ifelse(dados$constip == 1, 0, 1)
dados$diarr2 <- ifelse(dados$diarr == 1, 0, 1)
dados$fe_moles2 <- ifelse(dados$fe_moles == 1, 0, 1)
dados$fe_duras2 <- ifelse(dados$fe_duras == 1, 0, 1)
dados$urg_defec2 <- ifelse(dados$urg_defec == 1, 0, 1)
dados$n_esvaz2 <- ifelse(dados$n_esvaz == 1, 0, 1)
dados$sexo <- as.factor(ifelse(dados$sexo == 2, 'Feminino', 'Masculino'))
dados$sexo <- relevel(dados$sexo, ref = "Masculino")
dados$hpylori <- as.factor(ifelse(dados$hpylori == 1, 'Apresenta', 'Não apresenta'))
dados$hpylori <- relevel(dados$hpylori, ref = "Não apresenta")
dados$pre_dm <- as.factor(ifelse(dados$pre_dm == 1, 'Apresenta', 'Não apresenta'))
dados$pre_dm <- relevel(dados$pre_dm, ref = "Não apresenta")
dados$dm <- as.factor(ifelse(dados$dm == 1, 'Apresenta', 'Não apresenta'))
dados$dm <- relevel(dados$dm, ref = "Não apresenta")
dados$dislip <- as.factor(ifelse(dados$dislip == 1, 'Apresenta', 'Não apresenta'))
dados$dislip <- relevel(dados$dislip, ref = "Não apresenta")
dados$has <- as.factor(ifelse(dados$has == 1, 'Apresenta', 'Não apresenta'))
dados$has <- relevel(dados$has, ref = "Não apresenta")
dados$dcv <- as.factor(ifelse(dados$dcv == 1, 'Apresenta', 'Não apresenta'))
dados$dcv <- relevel(dados$dcv, ref = "Não apresenta")
dados$apneia <- as.factor(ifelse(dados$apneia == 1, 'Apresenta', 'Não apresenta'))
dados$apneia <- relevel(dados$apneia, ref = "Não apresenta")
dados$dor_art <- as.factor(ifelse(dados$dor_art == 1, 'Apresenta', 'Não apresenta'))
dados$dor_art <- relevel(dados$dor_art, ref = "Não apresenta")
dados$frutose2 <- as.factor(ifelse(dados$frutose == 0 | dados$frutose == 1,'baixo/medio','alto'))
dados$frutose2 <- relevel(dados$frutose2, ref = "baixo/medio")
dados$lactose2 <- as.factor(ifelse(dados$lactose == 0 | dados$lactose == 1,'baixo/medio','alto'))
dados$lactose2 <- relevel(dados$lactose2, ref = "baixo/medio")
dados$sorbitol2 <- as.factor(ifelse(dados$sorbitol == 0 | dados$sorbitol == 1,'baixo/medio','alto'))
dados$sorbitol2 <- relevel(dados$sorbitol2, ref = "baixo/medio")
dados$gos2 <- as.factor(ifelse(dados$gos == 0 | dados$gos == 1,'baixo/medio','alto'))
dados$gos2 <- relevel(dados$gos2, ref = "baixo/medio")
dados$fructano2 <- as.factor(ifelse(dados$fructano == 0 | dados$fructano == 1,'baixo/medio','alto'))
dados$fructano2 <- relevel(dados$fructano2, ref = "baixo/medio")
dados$manitol2 <- as.factor(ifelse(dados$manitol == 0 | dados$manitol == 1,'baixo/medio','alto'))
dados$manitol2 <- relevel(dados$manitol2, ref = "baixo/medio")
dados2 <- na.omit(dados)
source('~/Dropbox/Aulas-Acessorias/9 Bruna Maia/2_scripts/0_funcoes.R')
#pred_dor_abd <- dor_abd2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
pred_nausea <- nausea2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
#pred_ronco <- ronco2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
#pred_arroto <- arroto2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
#pred_constip <- constip2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
#pred_diarr <- diarr2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
#pred_fe_moles <- fe_moles2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
pred_fe_duras <- fe_duras2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
pred_urg_defec <- urg_defec2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
pred_n_esvaz <- n_esvaz2 ~ frutose2 + lactose2 + manitol2 + sorbitol2 + gos2 + fructano2 + hpylori + dm +  has + apneia + dor_art + idade
Z0 <- mc_id(dados2) # Identidade
fit <-
mcglm(linear_pred = c(#pred_dor_abd,
pred_nausea,
#pred_ronco,
#pred_arroto,
#pred_constip,
#pred_diarr,
#pred_fe_moles,
pred_fe_duras,
pred_urg_defec,
pred_n_esvaz),
matrix_pred = list(c(Z0),c(Z0),
c(Z0),c(Z0)),
link = c("logit", "logit",
"logit", "logit"),
variance = c("binomialP", "binomialP",
"binomialP", "binomialP"),
control_algorithm = list(verbose = T,
tuning = 0.01,
max_iter = 140,
tol = 0.01
),
#power_fixed = c(F,F,F,F),
data = dados2)
matplot(fit$IterationCovariance, type = 'l', xlim = c(1,150))
## chol(vcov) inversa
chol_inv <- Matrix::chol(fit$inv_C)
## Resíduos empilhados
residuos <- as.numeric(residuals(fit, type = 'raw'))
## Produto matricial
pearson <- as.numeric(chol_inv%*%residuos)
## Preditos
preditos <- fit$fitted
## Dataframe
res_pred <- data.frame(index = rep(1:nrow(dados2),4),
resp = c(rep('nausea', nrow(dados2)),
rep('fe_duras', nrow(dados2)),
rep('urg_defec', nrow(dados2)),
rep('n_esvaz', nrow(dados2))),
observado = c(dados2$nausea2,
dados2$fe_duras2,
dados2$urg_defec2,
dados2$n_esvaz2),
preditos = preditos,
pearson = pearson,
raw = residuos
)
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free', ncol = 4) +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free', ncol = 4) +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') +
facet_wrap(~resp, scales = 'free', ncol = 4)
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') +
facet_wrap(~resp, scales = 'free', ncol = 4)
ggpubr::ggarrange(g1,g2, nrow = 2)
dados2$pred_nausea <- res_pred$preditos[1:nrow(dados2)]
dados2$pred_fe_duras <- res_pred$preditos[(nrow(dados2)+1):(nrow(dados2)*2)]
dados2$pred_urg_defec <- res_pred$preditos[((nrow(dados2)*2)+1):(nrow(dados2)*3)]
dados2$pred_n_esvaz <- res_pred$preditos[((nrow(dados2)*3)+1):(nrow(dados2)*4)]
dados2$pearson_nausea <- res_pred$pearson[1:nrow(dados2)]
dados2$pearson_fe_duras <- res_pred$pearson[(nrow(dados2)+1):(nrow(dados2)*2)]
dados2$pearson_urg_defec <- res_pred$pearson[((nrow(dados2)*2)+1):(nrow(dados2)*3)]
dados2$pearson_n_esvaz <- res_pred$pearson[((nrow(dados2)*3)+1):(nrow(dados2)*4)]
dados2$raw_nausea <- res_pred$raw[1:nrow(dados2)]
dados2$raw_fe_duras <- res_pred$raw[(nrow(dados2)+1):(nrow(dados2)*2)]
dados2$raw_urg_defec <- res_pred$raw[((nrow(dados2)*2)+1):(nrow(dados2)*3)]
dados2$raw_n_esvaz <- res_pred$raw[((nrow(dados2)*3)+1):(nrow(dados2)*4)]
mal_ajustados <- subset(dados2,
pearson_nausea > 2 |
pearson_nausea < -2 |
pearson_fe_duras > 2 |
pearson_fe_duras < -2 |
pearson_urg_defec > 2 |
pearson_urg_defec < -2 |
pearson_n_esvaz > 2 |
pearson_n_esvaz < -2
)
nrow(mal_ajustados)
# SAIDA DO MODELO
resumo <- summary(fit)
betas_nausea <- round(resumo[[1]]$Regression, 4)
betas_fe_duras <- round(resumo[[2]]$Regression, 4)
betas_urg_defec <- round(resumo[[3]]$Regression, 4)
betas_n_esvaz <- round(resumo[[4]]$Regression, 4)
round(resumo$`Resp.Variable 1`$tau,4)
round(resumo$`Resp.Variable 2`$tau,4)
round(resumo$`Resp.Variable 3`$tau,4)
round(resumo$`Resp.Variable 4`$tau,4)
confint(fit)
beta_nausea <- data.frame(name = rownames(resumo$`Resp.Variable 1`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 1`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[1:13,])[,1]),
ic_max = as.vector(exp(confint(fit)[1:13,])[,2]))
beta_fe_duras <- data.frame(name = rownames(resumo$`Resp.Variable 2`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 2`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[14:26,])[,1]),
ic_max = as.vector(exp(confint(fit)[14:26,])[,2]))
beta_urg_defec <- data.frame(name = rownames(resumo$`Resp.Variable 3`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 3`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[27:39,])[,1]),
ic_max = as.vector(exp(confint(fit)[27:39,])[,2]))
beta_n_esvaz <- data.frame(name = rownames(resumo$`Resp.Variable 4`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 4`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[40:52,])[,1]),
ic_max = as.vector(exp(confint(fit)[40:52,])[,2]))
beta_nausea[,2:4] <- round(beta_nausea[,2:4],2)
beta_fe_duras[,2:4] <- round(beta_fe_duras[,2:4],2)
beta_urg_defec[,2:4] <- round(beta_urg_defec[,2:4],2)
#---------------------------------------------------------------
# RESULTADOS
#---------------------------------------------------------------
# SAIDA DO MODELO
resumo <- summary(fit)
#---------------------------------------------------------------
# REGRESSÃO
betas_nausea <- round(resumo[[1]]$Regression, 4)
betas_fe_duras <- round(resumo[[2]]$Regression, 4)
betas_urg_defec <- round(resumo[[3]]$Regression, 4)
betas_n_esvaz <- round(resumo[[4]]$Regression, 4)
#---------------------------------------------------------------
# TAU
round(resumo$`Resp.Variable 1`$tau,4)
round(resumo$`Resp.Variable 2`$tau,4)
round(resumo$`Resp.Variable 3`$tau,4)
round(resumo$`Resp.Variable 4`$tau,4)
#---------------------------------------------------------------
# INTERVALOS DE CONFIANÇA
confint(fit)
#---------------------------------------------------------------
# PARAMETROS DE REGRESSAO
beta_nausea <- data.frame(name = rownames(resumo$`Resp.Variable 1`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 1`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[1:13,])[,1]),
ic_max = as.vector(exp(confint(fit)[1:13,])[,2]))
beta_fe_duras <- data.frame(name = rownames(resumo$`Resp.Variable 2`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 2`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[14:26,])[,1]),
ic_max = as.vector(exp(confint(fit)[14:26,])[,2]))
beta_urg_defec <- data.frame(name = rownames(resumo$`Resp.Variable 3`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 3`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[27:39,])[,1]),
ic_max = as.vector(exp(confint(fit)[27:39,])[,2]))
beta_n_esvaz <- data.frame(name = rownames(resumo$`Resp.Variable 4`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 4`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[40:52,])[,1]),
ic_max = as.vector(exp(confint(fit)[40:52,])[,2]))
beta_nausea[,2:4] <- round(beta_nausea[,2:4],2)
beta_fe_duras[,2:4] <- round(beta_fe_duras[,2:4],2)
beta_urg_defec[,2:4] <- round(beta_urg_defec[,2:4],2)
beta_n_esvaz[,2:4] <- round(beta_n_esvaz[,2:4],2)
beta_nausea
beta_fe_duras
beta_urg_defec
beta_n_esvaz
#---------------------------------------------------------------
setwd("~/msc/3_th_mcglm/3_analise_de_dados/4_vicios_compulsoes")
library(mcglm)
library(Matrix)
library(tidyverse)
dados <- read.csv2("~/Dropbox/Aulas-Acessorias/10 Ligia Carlos/0 dados/dados.csv", sep = ',')
dados2 <- na.omit(dados)
imc <- dados %>% gather(key = 'momento_imc',
value = 'imc', imc1:imc4)
imc <- imc[,c(1,18,19)]
imc$chave <- 1:nrow(imc)
yale <- dados %>% gather(key = 'momento_yale',
value = 'yale', yale1:yale4)
yale <- yale[,c(1,18,19)]
yale$chave <- 1:nrow(yale)
ecap <- dados %>% gather(key = 'momento_ecap',
value = 'ecap', ecap1:ecap4)
ecap <- ecap[,c(1,18,19)]
ecap$chave <- 1:nrow(ecap)
dados3 <- dados %>% gather(key = 'momento',
value = 'peso', peso1:peso4)
dados3 <- dados3[,c(1,2,3,4,5,6,7,8,18,19)]
dados3$chave <- 1:nrow(dados3)
dados3 <- left_join(dados3, imc)
dados3 <- left_join(dados3, yale)
dados3 <- left_join(dados3, ecap)
dados3$momento <- as.factor(dados3$momento)
levels(dados3$momento) <- c('Pré op.','90 dias','365 dias')
dados3 <- dados3[,-c(12,14,16)]
dados4 <- na.omit(dados3)
a <- ggplot(dados4, aes(x = yale)) +
geom_bar(col = 1, fill='white') +
xlab('Count') +
ylab('Frequency') +
theme_bw() +
#scale_y_continuous(breaks = round(seq(0, 120, length.out = 3), 2)) +
ggtitle('a')
b <- ggplot(data = dados4,
mapping = aes_string(x='grupo', y='yale')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
theme_light() +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('Grupo') + ylab('Yale') + ggtitle('b')
c <- ggplot(data = dados4,
mapping = aes_string(x='momento', y='yale')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
theme_light() +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
xlab('Momento') + ylab('Yale') + ggtitle('c')
pred_yale <- yale ~ momento + grupo + momento:grupo
pred_ecap <- ecap ~ momento + grupo + momento:grupo
Z0 <- mc_id(dados4) # Identidade
Z1 <- mc_mixed(~0 + factor(id), data = dados4) # individuo
fit <-
mcglm(linear_pred = c(pred_yale,
pred_ecap),
matrix_pred = list(c(Z0,Z1),
c(Z0,Z1)),
link = c("log", "log"),
variance = c("poisson_tweedie", "poisson_tweedie"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 250,
tol = 1e-4),
power_fixed = c(F,F),
data = dados4)
matplot(fit$IterationCovariance, type = 'l', xlim = c(1,160))
## chol(vcov) inversa
chol_inv <- Matrix::chol(fit$inv_C)
## Resíduos empilhados
residuos <- as.numeric(residuals(fit, type = 'raw'))
## Produto matricial
pearson <- as.numeric(chol_inv%*%residuos)
## Preditos
preditos <- fit$fitted
## Dataframe
res_pred <- data.frame(index = rep(1:nrow(dados4),2),
resp = c(rep('yale', nrow(dados4)),
rep('ecap', nrow(dados4))),
observado = c(dados4$yale,
dados4$ecap),
preditos = preditos,
pearson = pearson,
raw = residuos
)
mean1 = MASS::fitdistr(res_pred$pearson[1:nrow(dados4)],
densfun = "normal")$estimate[1]
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
dados4$pred_yale <- res_pred$preditos[1:nrow(dados4)]
dados4$pred_ecap <- res_pred$preditos[(nrow(dados4)+1):nrow(res_pred)]
dados4$pearson_yale <- res_pred$pearson[1:nrow(dados4)]
dados4$pearson_ecap <- res_pred$pearson[(nrow(dados4)+1):nrow(res_pred)]
dados4$raw_yale <- res_pred$raw[1:nrow(dados4)]
dados4$raw_ecap <- res_pred$raw[(nrow(dados4)+1):nrow(res_pred)]
mal_ajustados <- subset(dados4,
pearson_yale   >  2    |
pearson_yale < -2    |
pearson_ecap  >  2 |
pearson_ecap  < -2
)
nrow(mal_ajustados)
#---------------------------------------------------------------
# RESULTADOS
#---------------------------------------------------------------
# SAIDA DO MODELO
resumo <- summary(fit)
#---------------------------------------------------------------
# REGRESSÃO
betas_yale <- round(resumo[[1]]$Regression, 4)
betas_ecap <- round(resumo[[2]]$Regression, 4)
#---------------------------------------------------------------
# TAU E P
round(resumo$`Resp.Variable 1`$Power,4)
round(resumo$`Resp.Variable 1`$tau,4)
round(resumo$`Resp.Variable 2`$Power,4)
round(resumo$`Resp.Variable 2`$tau,4)
#---------------------------------------------------------------
# INTERVALOS DE CONFIANÇA
confint(fit)
#---------------------------------------------------------------
# PARAMETROS DE REGRESSAO
beta_yale <- data.frame(name = rownames(resumo$`Resp.Variable 1`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 1`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[1:6,])[,1]),
ic_max = as.vector(exp(confint(fit)[1:6,])[,2]))
beta_ecap <- data.frame(name = rownames(resumo$`Resp.Variable 2`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 2`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[7:12,])[,1]),
ic_max = as.vector(exp(confint(fit)[7:12,])[,2]))
beta_yale[,2:4] <- round(beta_yale[,2:4],2)
beta_ecap[,2:4] <- round(beta_ecap[,2:4],2)
beta_yale
beta_ecap
#---------------------------------------------------------------
table4 <- expand.grid(Grupo=levels(dados4$grupo),
Momento=levels(dados4$momento))
attach(table4)
# YALE
table4$lin_pred_yale <-
betas_yale$Estimate[1] +
betas_yale$Estimate[2]*I(Momento==levels(dados4$momento)[2])+
betas_yale$Estimate[3]*I(Momento==levels(dados4$momento)[3])+
betas_yale$Estimate[4]*I(Grupo==levels(dados4$grupo)[2])+
betas_yale$Estimate[5]*I(Momento==levels(dados4$momento)[2])*I(Grupo==levels(dados4$grupo)[2])+
betas_yale$Estimate[6]*I(Momento==levels(dados4$momento)[3])*I(Grupo==levels(dados4$grupo)[2])
table4$mean_pred_yale <- round(exp(table4$lin_pred_yale),2)
table4$lin_pred_yale <- round(table4$lin_pred_yale,2)
# ECAP
table4$lin_pred_ecap <-
betas_ecap$Estimate[1] +
betas_ecap$Estimate[2]*I(Momento==levels(dados4$momento)[2])+
betas_ecap$Estimate[3]*I(Momento==levels(dados4$momento)[3])+
betas_ecap$Estimate[4]*I(Grupo==levels(dados4$grupo)[2])+
betas_ecap$Estimate[5]*I(Momento==levels(dados4$momento)[2])*I(Grupo==levels(dados4$grupo)[2])+
betas_ecap$Estimate[6]*I(Momento==levels(dados4$momento)[3])*I(Grupo==levels(dados4$grupo)[2])
table4$mean_pred_ecap <- round(exp(table4$lin_pred_ecap),2)
table4$lin_pred_ecap <- round(table4$lin_pred_ecap,2)
detach(table4)
tabela <- table4[,c(1,2,4,6)]
names(tabela) <- c('Grupo', 'Momento', 'Yale predito', 'Ecap predito')
tabela
table4_plot <- data.frame(Grupo = rep(table4$Grupo,2),
Momento = rep(table4$Momento,2),
Métrica = c(rep('Yale',6),
rep('Ecap',6)),
Predito = c(table4$mean_pred_yale, table4$mean_pred_ecap))
ggplot(table4_plot, aes(x=Momento,
y=Predito,
group = Grupo))+
theme_bw() +
geom_line(aes(group=Grupo, linetype=Grupo)) +
theme(legend.position = 'top') +
#labs(title = "Ecap")+
xlab('Experimental moment') +
ylab('Estimate')+ geom_point() +
facet_wrap(~Métrica, scales = 'free')
#---------------------------------------------------------------
seq(1:20)
c(rep(0,10))
c(rep(0,10), rep(1,10))
sample(c(rep(0,10), rep(1,10)))
chol_inv
chol_inv%*%residuos
pearson <- as.numeric(chol_inv%*%residuos)
pearson2 <- as.numeric(residuos%*%chol_inv)
hist(pearson)
hist(pearson2)
plot(fit)
