load("/home/lacf14/msc/3_th_mcglm/4_estudo_simulacao/taus/uni.Rdata")
normal_uni_n50$df_final
poisson_uni_n50$df_final
binomial_uni_n50$df_final
normal_uni_n100$df_final
poisson_uni_n100$df_final
binomial_uni_n100$df_final
normal_uni_n250$df_final
poisson_uni_n250$df_final
binomial_uni_n250$df_final
normal_uni_n500$df_final
poisson_uni_n500$df_final
binomial_uni_n500$df_final
normal_uni_n1000$df_final
poisson_uni_n1000$df_final
binomial_uni_n1000$df_final
normal_tri_n50$df_final
results1 <- rbind(normal_uni_n50$df_final,
poisson_uni_n50$df_final,
binomial_uni_n50$df_final,
normal_uni_n100$df_final,
poisson_uni_n100$df_final,
binomial_uni_n100$df_final,
normal_uni_n250$df_final,
poisson_uni_n250$df_final,
binomial_uni_n250$df_final,
normal_uni_n500$df_final,
poisson_uni_n500$df_final,
binomial_uni_n500$df_final,
normal_uni_n1000$df_final,
poisson_uni_n1000$df_final,
binomial_uni_n1000$df_final,
#normal_tri_n50$df_final,
#poisson_tri_n50$df_final,
#binomial_tri_n50$df_final,
#normal_tri_n100$df_final,
#poisson_tri_n100$df_final,
#binomial_tri_n100$df_final,
#normal_tri_n250$df_final,
#poisson_tri_n250$df_final,
#binomial_tri_n250$df_final,
#normal_tri_n500$df_final,
#poisson_tri_n500$df_final,
#binomial_tri_n500$df_final,
#normal_tri_n1000$df_final,
#poisson_tri_n1000$df_final,
#binomial_tri_n1000$df_final,
#tri_n50$df_final,
#tri_n100$df_final,
#tri_n250$df_final,
#tri_n500$df_final,
#tri_n1000$df_final
)
results1 <- rbind(normal_uni_n50$df_final,
poisson_uni_n50$df_final,
binomial_uni_n50$df_final,
normal_uni_n100$df_final,
poisson_uni_n100$df_final,
binomial_uni_n100$df_final,
normal_uni_n250$df_final,
poisson_uni_n250$df_final,
binomial_uni_n250$df_final,
normal_uni_n500$df_final,
#poisson_uni_n500$df_final,
binomial_uni_n500$df_final,
normal_uni_n1000$df_final,
poisson_uni_n1000$df_final,
binomial_uni_n1000$df_final#,
#normal_tri_n50$df_final,
#poisson_tri_n50$df_final,
#binomial_tri_n50$df_final,
#normal_tri_n100$df_final,
#poisson_tri_n100$df_final,
#binomial_tri_n100$df_final,
#normal_tri_n250$df_final,
#poisson_tri_n250$df_final,
#binomial_tri_n250$df_final,
#normal_tri_n500$df_final,
#poisson_tri_n500$df_final,
#binomial_tri_n500$df_final,
#normal_tri_n1000$df_final,
#poisson_tri_n1000$df_final,
#binomial_tri_n1000$df_final,
#tri_n50$df_final,
#tri_n100$df_final,
#tri_n250$df_final,
#tri_n500$df_final,
#tri_n1000$df_final
)
results1$sample_size <- as.factor(results1$sample_size)
names(results1)[4] <- "Tamanho amostral"
results1$distribution <- factor(results1$distribution,
levels = c("uni normal", "uni poisson",
"uni binomial", "tri normal",
"tri poisson", "tri binomial",
"normal/poisson/binomial"))
results1
ggplot(data = results1,
mapping = aes(x = dist,
y = rej,
col = `Tamanho amostral`)) +
geom_point() +
geom_line() +
facet_wrap(~distribution)+
ylab("% rejeição") +
xlab("Distância") +
ggtitle("")+
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (15),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 10),
text = element_text(size=10))
library(ggplot2)
ggplot(data = results1,
mapping = aes(x = dist,
y = rej,
col = `Tamanho amostral`)) +
geom_point() +
geom_line() +
facet_wrap(~distribution)+
ylab("% rejeição") +
xlab("Distância") +
ggtitle("")+
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (15),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 10),
text = element_text(size=10))
#----------------------------------------------------------------
# ESTUDO DE SIMULAÇÃO
#----------------------------------------------------------------
# 500 data sets
# 4 tamanhos amostrais: 50, 100, 250, 500 e 1000
# 3 distribuições: normal, poisson, bernoulli (binomial n=1)
#----------------------------------------------------------------
# Taus = 0.5,0.5
#----------------------------------------------------------------
# 20 pontos: faz-se um decrécimo de tau/20 na hipótese
# Obtem a distância euclideana do vetor original para o modificado.
# Ao final divide o vetor pelo seu sd para independente dos betas
# iniciais as distancias estarem sempre na mesma escala
#----------------------------------------------------------------
# Univariado normal
# Univariado poisson
# Univariado bernouli
# Trivariado normal
# Trivariado poisson
# Trivariado bernouli
# Trivariado normal, poisson, bernouli
#----------------------------------------------------------------
# bibliotecas necessárias
library(mcglm)
library(Matrix)
library(NORTARA)
#----------------------------------------------------------------
# minhas funções
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
#----------------------------------------------------------------
source("~/msc/3_th_mcglm/4_estudo_simulacao/taus/funcoes_simula/simula_uni_long_normal.R")
source("~/msc/3_th_mcglm/4_estudo_simulacao/taus/funcoes_simula/simula_uni_long_pois_binom.R")
#----------------------------------------------------------------
# Parâmetros
n_datasets = 500
n_rep = 5
n_distances = 20
taus = c(0.5,0.5)
#----------------------------------------------------------------
sample_size = 500
sample_size
n_datasets
n_rep
taus
n_distances
poisson_uni_n500 <- simula_uni_long_pois_binom(sample_size = sample_size,
n_datasets = n_datasets,
n_rep = n_rep,
taus = taus,
n_distances = n_distances,
distribution = 'poisson')
save.image(file = 'unipoisson500.Rdata')
poisson_uni_n500
load("/home/lacf14/msc/3_th_mcglm/4_estudo_simulacao/taus/uni.Rdata")
load("/home/lacf14/msc/3_th_mcglm/4_estudo_simulacao/taus/unipoisson500.Rdata")
normal_uni_n50$df_final
poisson_uni_n50$df_final
binomial_uni_n50$df_final
normal_uni_n100$df_final
poisson_uni_n100$df_final
binomial_uni_n100$df_final
normal_uni_n250$df_final
poisson_uni_n250$df_final
binomial_uni_n250$df_final
normal_uni_n500$df_final
poisson_uni_n500$df_final
binomial_uni_n500$df_final
normal_uni_n1000$df_final
poisson_uni_n1000$df_final
binomial_uni_n1000$df_final
results1 <- rbind(normal_uni_n50$df_final,
poisson_uni_n50$df_final,
binomial_uni_n50$df_final,
normal_uni_n100$df_final,
poisson_uni_n100$df_final,
binomial_uni_n100$df_final,
normal_uni_n250$df_final,
poisson_uni_n250$df_final,
binomial_uni_n250$df_final,
normal_uni_n500$df_final,
poisson_uni_n500$df_final,
binomial_uni_n500$df_final,
normal_uni_n1000$df_final,
poisson_uni_n1000$df_final,
binomial_uni_n1000$df_final#,
#normal_tri_n50$df_final,
#poisson_tri_n50$df_final,
#binomial_tri_n50$df_final,
#normal_tri_n100$df_final,
#poisson_tri_n100$df_final,
#binomial_tri_n100$df_final,
#normal_tri_n250$df_final,
#poisson_tri_n250$df_final,
#binomial_tri_n250$df_final,
#normal_tri_n500$df_final,
#poisson_tri_n500$df_final,
#binomial_tri_n500$df_final,
#normal_tri_n1000$df_final,
#poisson_tri_n1000$df_final,
#binomial_tri_n1000$df_final,
#tri_n50$df_final,
#tri_n100$df_final,
#tri_n250$df_final,
#tri_n500$df_final,
#tri_n1000$df_final
)
results1$sample_size <- as.factor(results1$sample_size)
names(results1)[4] <- "Tamanho amostral"
results1$distribution <- factor(results1$distribution,
levels = c("uni normal", "uni poisson",
"uni binomial", "tri normal",
"tri poisson", "tri binomial",
"normal/poisson/binomial"))
ggplot(data = results1,
mapping = aes(x = dist,
y = rej,
col = `Tamanho amostral`)) +
geom_point() +
geom_line() +
facet_wrap(~distribution)+
ylab("% rejeição") +
xlab("Distância") +
ggtitle("")+
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (15),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 10),
text = element_text(size=10))
save.image("~/msc/3_th_mcglm/4_estudo_simulacao/taus/resultados_uni.RData")
