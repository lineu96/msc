Ntrial = ,
list(rep(10,nrow(datasets[[i]])))
Ntrial = list(rep(10,nrow(datasets[[i]]))),
Ntrial = list(rep(10,nrow(datasets[[i]])))
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = "logit",
variance = "binomialP",
Ntrial = list(rep(10,nrow(datasets[[i]]))),
data = datasets[[i]])
datasets[[i]]
form <- y/10 ~ x # preditor
Z0 <- mc_id(datasets[[1]]) # matriz identidade para o preditor matricial
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = "logit",
variance = "binomialP",
Ntrial = list(10),
data = datasets[[i]])
sample_size = 250
trat <- gl(n_trat, sample_size/n_trat)
datasets <- list()
for (i in 1:n_datasets) {
X <- model.matrix(~ trat)
p <- exp(X%*%betas)/(1 + exp(X%*%betas))
y <- rbinom(sample_size,
p = p,
size = 10)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
form <- y/10 ~ x # preditor
Z0 <- mc_id(datasets[[1]]) # matriz identidade para o preditor matricial
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = "logit",
variance = "binomialP",
Ntrial = list(10),
data = datasets[[i]])
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = "logit",
variance = "binomialP",
Ntrial = list(10),
data = datasets[[4]])
models <- list()
for (i in 1:n_datasets) {
fit <-
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = "logit",
variance = "binomialP",
Ntrial = list(10),
data = datasets[[i]])
models[[i]] <- fit
print(i)
}
models
dists <- vector() # vetor para armazenar as distancias
dists[1] <- 0 # distancia inicial 0
hyp_betas <- betas # vetor inicial para distribuir os efeitos
hypothesis <- list() # vetor para armazenar as hipoteses
# hipotese inicial
hypothesis[[1]] <- paste(c('beta10',
'beta11',
'beta12',
'beta13'), '=', betas)
hypothesis
for (i in 2:(5/dif_effects)) {
hyp_betas[1] <- hyp_betas[1] - dif_effects
hyp_betas[c(2,3,4)] <- hyp_betas[c(2,3,4)] + dif_effects/3
hypothesis[[i]] <- paste(c('beta10',
'beta11',
'beta12',
'beta13'), '=', hyp_betas)
dists[[i]] <- dist(rbind(betas, hyp_betas), method = "euclidean")
}
dists
p_test <- matrix(nrow = length(hypothesis),
ncol = length(models))
for (i in 1:length(models)) {
for (j in 1:length(hypothesis)) {
p_test[j,i] <- mc_linear_hypothesis(object =  models[[i]],
hypothesis = hypothesis[[j]])$P_valor
}
}
#----------------------------------------------------------------
# minhas funções
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
p_test <- matrix(nrow = length(hypothesis),
ncol = length(models))
p_test
for (i in 1:length(models)) {
for (j in 1:length(hypothesis)) {
p_test[j,i] <- mc_linear_hypothesis(object =  models[[i]],
hypothesis = hypothesis[[j]])$P_valor
}
}
p_test
# converte resultado para dataframe
p_test <- as.data.frame(p_test)
# acrescenta info de distancia
p_test$dist <- dists
rej <- ifelse(p_test[,1:(ncol(p_test)-1)] < 0.05, 1, 0)
df_final <- data.frame(dist = df$dist,
rej = (rowSums(rej)/(ncol(df)-1))*100)
rej <- ifelse(p_test[,1:(ncol(p_test)-1)] < 0.05, 1, 0)
rej
rej <- ifelse(p_test[,1:(ncol(p_test)-1)] < 0.05, 1, 0)
df_final <- data.frame(dist = p_test$dist,
rej = (rowSums(rej)/(ncol(p_test)-1))*100)
df_final
sample_size = 250
n_datasets = 100
n_trat = 4
betas = c(5,0,0,0)
dif_effects = 0.1
trat <- gl(n_trat, sample_size/n_trat)
datasets <- list()
for (i in 1:n_datasets) {
X <- model.matrix(~ trat)
p <- exp(X%*%betas)/(1 + exp(X%*%betas))
y <- rbinom(sample_size,
p = p,
size = 10)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
form <- y/10 ~ x # preditor
Z0 <- mc_id(datasets[[1]]) # matriz identidade para o preditor matricial
models <- list()
for (i in 1:n_datasets) {
fit <-
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = "logit",
variance = "binomialP",
Ntrial = list(10),
data = datasets[[i]])
models[[i]] <- fit
print(i)
}
dists <- vector() # vetor para armazenar as distancias
dists[1] <- 0 # distancia inicial 0
hyp_betas <- betas # vetor inicial para distribuir os efeitos
hypothesis <- list() # vetor para armazenar as hipoteses
# hipotese inicial
hypothesis[[1]] <- paste(c('beta10',
'beta11',
'beta12',
'beta13'), '=', betas)
# hipotese inicial
hypothesis[[1]] <- paste(c('beta10',
'beta11',
'beta12',
'beta13'), '=', betas)
for (i in 2:(5/dif_effects)) {
hyp_betas[1] <- hyp_betas[1] - dif_effects
hyp_betas[c(2,3,4)] <- hyp_betas[c(2,3,4)] + dif_effects/3
hypothesis[[i]] <- paste(c('beta10',
'beta11',
'beta12',
'beta13'), '=', hyp_betas)
dists[[i]] <- dist(rbind(betas, hyp_betas), method = "euclidean")
}
p_test <- matrix(nrow = length(hypothesis),
ncol = length(models))
p_test
for (i in 1:length(models)) {
for (j in 1:length(hypothesis)) {
p_test[j,i] <- mc_linear_hypothesis(object =  models[[i]],
hypothesis = hypothesis[[j]])$P_valor
}
}
p_test
# converte resultado para dataframe
p_test <- as.data.frame(p_test)
# acrescenta info de distancia
p_test$dist <- dists
rej <- ifelse(p_test[,1:(ncol(p_test)-1)] < 0.05, 1, 0)
df_final <- data.frame(dist = p_test$dist,
rej = (rowSums(rej)/(ncol(p_test)-1))*100)
df_final
#----------------------------------------------------------------
df=df_final
plot(rej~dist, df, type = 'o', lwd = 2, pch = 19,
xlab = 'Distância', ylab = 'Rejeições',
ylim = c(0,100),
main = main)
plot(rej~dist, df, type = 'o', lwd = 2, pch = 19,
xlab = 'Distância', ylab = 'Rejeições',
ylim = c(0,100)
)
abline(v=subset(df, rej == 100)[1,]$dist,
lty = 2, col = 2, pch = 3)
abline(h=5,
lty = 2, col = 2, pch = 3)
sample_size = 250
n_datasets = 100
n_trat = 4
betas = c(5,0,0,0)
dif_effects = 0.1
trat <- gl(n_trat, sample_size/n_trat)
trat
datasets <- list()
for (i in 1:n_datasets) {
X <- model.matrix(~ trat)
p <- exp(X%*%betas)/(1 + exp(X%*%betas))
y <- gamlss.dist::rBE(sample_size,
mu = p,
sigma = 0.2)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
datasets[[i]]
form <- y ~ x # preditor
Z0 <- mc_id(datasets[[1]]) # matriz identidade para o preditor matricial
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = "logit",
variance = "binomialP"
data = datasets[[i]])
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = "logit",
variance = "binomialP",
data = datasets[[i]])
models <- list()
for (i in 1:n_datasets) {
fit <-
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = "logit",
variance = "binomialP",
data = datasets[[i]])
models[[i]] <- fit
print(i)
}
dists <- vector() # vetor para armazenar as distancias
dists[1] <- 0 # distancia inicial 0
hyp_betas <- betas # vetor inicial para distribuir os efeitos
hypothesis <- list() # vetor para armazenar as hipoteses
# hipotese inicial
hypothesis[[1]] <- paste(c('beta10',
'beta11',
'beta12',
'beta13'), '=', betas)
for (i in 2:(5/dif_effects)) {
hyp_betas[1] <- hyp_betas[1] - dif_effects
hyp_betas[c(2,3,4)] <- hyp_betas[c(2,3,4)] + dif_effects/3
hypothesis[[i]] <- paste(c('beta10',
'beta11',
'beta12',
'beta13'), '=', hyp_betas)
dists[[i]] <- dist(rbind(betas, hyp_betas), method = "euclidean")
}
dists
hypothesis
p_test <- matrix(nrow = length(hypothesis),
ncol = length(models))
for (i in 1:length(models)) {
for (j in 1:length(hypothesis)) {
p_test[j,i] <- mc_linear_hypothesis(object =  models[[i]],
hypothesis = hypothesis[[j]])$P_valor
}
}
# converte resultado para dataframe
p_test <- as.data.frame(p_test)
p_test
# acrescenta info de distancia
p_test$dist <- dists
p_test$dist
rej <- ifelse(p_test[,1:(ncol(p_test)-1)] < 0.05, 1, 0)
rej
df_final <- data.frame(dist = p_test$dist,
rej = (rowSums(rej)/(ncol(p_test)-1))*100)
df_final
#----------------------------------------------------------------
df=df_final
plot(rej~dist, df, type = 'o', lwd = 2, pch = 19,
xlab = 'Distância', ylab = 'Rejeições',
ylim = c(0,100)
)
abline(v=subset(df, rej == 100)[1,]$dist,
lty = 2, col = 2, pch = 3)
abline(h=5,
lty = 2, col = 2, pch = 3)
#----------------------------------------------------------------
source('~/msc/4_estudo_simulacao/libs.R')
#----------------------------------------------------------------
source('~/msc/3_th_mcglm/4_estudo_simulacao/libs.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_normal.R')
#----------------------------------------------------------------
source('~/msc/3_th_mcglm/4_estudo_simulacao/libs.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_normal.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_poisson.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_binomial.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_beta.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/analises/grafico.R')
args(simula_binomial)
5/0.1
sample_size = 25
n_datasets = 100
n_trat = 4
betas = c(5,0, 0, 0)
dif_effects = 0.1
n_datasets = 10
normal_n25 <- simula_normal(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
diff_effects = diff_effects)
simula_normal(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
diff_effects = diff_effects)
args(simula_normal)
normal_n25 <- simula_normal(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
diff_effects = dif_effects)
normal_n25 <- simula_normal(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
normal_n25
normal_n25 <- simula_normal(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
poisson_n25 <- simula_poisson(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
#----------------------------------------------------------------
source('~/msc/3_th_mcglm/4_estudo_simulacao/libs.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_normal.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_poisson.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_binomial.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_beta.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/analises/grafico.R')
poisson_n25 <- simula_poisson(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
poisson_n25
binomial_n25 <- simula_binomial(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
beta_n25 <- simula_beta(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_beta.R')
beta_n25 <- simula_beta(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
#----------------------------------------------------------------
source('~/msc/3_th_mcglm/4_estudo_simulacao/libs.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_normal.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_poisson.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_binomial.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_beta.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/analises/grafico.R')
sample_size = 25
n_datasets = 10
n_trat = 4
betas = c(5,0, 0, 0)
dif_effects = 0.1
normal_n25 <- simula_normal(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
poisson_n25 <- simula_poisson(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
binomial_n25 <- simula_binomial(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
beta_n25 <- simula_beta(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
par(mfrow=c(2,2),oma = c(0, 0, 2, 0))
grafico(normal_n25, main = 'Normal')
source('~/msc/3_th_mcglm/4_estudo_simulacao/analises/grafico.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/analises/grafico.R')
x11()
par(mfrow=c(2,2),oma = c(0, 0, 2, 0))
grafico(normal_n25, main = 'Normal')
grafico(poisson_n25, main = 'Poisson')
grafico(binomial_n25, main = 'Binomial')
grafico(beta_n25, main = 'Beta')
mtext("10 datasets, n = 25", outer = TRUE, cex = 1.5)
#----------------------------------------------------------------
source('~/msc/3_th_mcglm/4_estudo_simulacao/libs.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_normal.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_poisson.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_binomial.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_beta.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/analises/grafico.R')
sample_size = 25
n_datasets = 100
n_trat = 4
betas = c(5,0, 0, 0)
dif_effects = 0.1
normal_n25 <- simula_normal(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
poisson_n25 <- simula_poisson(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
binomial_n25 <- simula_binomial(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
beta_n25 <- simula_beta(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
par(mfrow=c(2,2),oma = c(0, 0, 2, 0))
grafico(normal_n25, main = 'Normal')
grafico(poisson_n25, main = 'Poisson')
grafico(binomial_n25, main = 'Binomial')
grafico(beta_n25, main = 'Beta')
mtext("10 datasets, n = 25", outer = TRUE, cex = 1.5)
mtext("100 datasets, n = 25", outer = TRUE, cex = 1.5)
par(mfrow=c(2,2),oma = c(0, 0, 2, 0))
grafico(normal_n25, main = 'Normal')
grafico(poisson_n25, main = 'Poisson')
grafico(binomial_n25, main = 'Binomial')
grafico(beta_n25, main = 'Beta')
mtext("100 datasets, n = 25", outer = TRUE, cex = 1.5)
#----------------------------------------------------------------
source('~/msc/3_th_mcglm/4_estudo_simulacao/libs.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_normal.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_poisson.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_binomial.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/simula_distr/simula_beta.R')
source('~/msc/3_th_mcglm/4_estudo_simulacao/analises/grafico.R')
sample_size = 500
n_datasets = 1000
n_trat = 4
betas = c(5,0, 0, 0)
dif_effects = 0.1
normal_n25 <- simula_normal(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
poisson_n25 <- simula_poisson(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
binomial_n25 <- simula_binomial(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
beta_n25 <- simula_beta(sample_size = sample_size,
n_datasets = n_datasets,
n_trat = n_trat,
betas = betas,
dif_effects = dif_effects)
normal_n25
poisson_n25
binomial_n25
beta_n25
x11()
par(mfrow=c(2,2),oma = c(0, 0, 2, 0))
grafico(normal_n25, main = 'Normal')
grafico(poisson_n25, main = 'Poisson')
grafico(binomial_n25, main = 'Binomial')
grafico(beta_n25, main = 'Beta')
mtext("1000 datasets, n = 500", outer = TRUE, cex = 1.5)
par(mfrow=c(2,2),oma = c(0, 0, 2, 0))
grafico(normal_n25, main = 'Normal')
grafico(poisson_n25, main = 'Poisson')
grafico(binomial_n25, main = 'Binomial')
grafico(beta_n25, main = 'Beta')
mtext("1000 datasets, n = 500", outer = TRUE, cex = 1.5)
x11()
par(mfrow=c(2,2),oma = c(0, 0, 2, 0))
grafico(normal_n25, main = 'Normal')
grafico(poisson_n25, main = 'Poisson')
grafico(binomial_n25, main = 'Binomial')
grafico(beta_n25, main = 'Beta')
mtext("1000 datasets, n = 500", outer = TRUE, cex = 1.5)
