library(ggplot2)
load("~/msc/3_th_mcglm/4_estudo_simulacao/SIMULA/betas/results.RData")
time_taken_uni
time_taken_tri
time_taken_tri2
normal_uni_n50$df_final
normal_uni_n50$df_final
poisson_uni_n50$df_final
binomial_uni_n50$df_final
normal_uni_n100$df_final
poisson_uni_n100$df_final
binomial_uni_n100$df_final
normal_uni_n250$df_final
poisson_uni_n250$df_final
binomial_uni_n250$df_final
normal_uni_n500$df_final
poisson_uni_n500$df_final
binomial_uni_n500$df_final
normal_uni_n1000$df_final
poisson_uni_n1000$df_final
binomial_uni_n1000$df_final
normal_tri_n50$df_final
poisson_tri_n50$df_final
binomial_tri_n50$df_final
normal_tri_n100$df_final
poisson_tri_n100$df_final
binomial_tri_n100$df_final
normal_tri_n250$df_final
poisson_tri_n250$df_final
binomial_tri_n250$df_final
normal_tri_n500$df_final
poisson_tri_n500$df_final
binomial_tri_n500$df_final
normal_tri_n1000$df_final
poisson_tri_n1000$df_final
binomial_tri_n1000$df_final
tri_n50$df_final
tri_n100$df_final
tri_n250$df_final
tri_n500$df_final
tri_n1000$df_final
results1 <- rbind(normal_uni_n50$df_final,
poisson_uni_n50$df_final,
binomial_uni_n50$df_final,
normal_uni_n100$df_final,
poisson_uni_n100$df_final,
binomial_uni_n100$df_final,
normal_uni_n250$df_final,
poisson_uni_n250$df_final,
binomial_uni_n250$df_final,
normal_uni_n500$df_final,
poisson_uni_n500$df_final,
binomial_uni_n500$df_final,
normal_uni_n1000$df_final,
poisson_uni_n1000$df_final,
binomial_uni_n1000$df_final,
normal_tri_n50$df_final,
poisson_tri_n50$df_final,
#binomial_tri_n50$df_final,
normal_tri_n100$df_final,
poisson_tri_n100$df_final,
binomial_tri_n100$df_final,
normal_tri_n250$df_final,
poisson_tri_n250$df_final,
binomial_tri_n250$df_final,
normal_tri_n500$df_final,
poisson_tri_n500$df_final,
binomial_tri_n500$df_final,
normal_tri_n1000$df_final,
poisson_tri_n1000$df_final,
binomial_tri_n1000$df_final)
results1$sample_size <- as.factor(results1$sample_size)
names(results1)[4] <- "Tamanho amostral"
results1$distribution <- as.factor(results1$distribution)
ggplot(data = results1,
mapping = aes(x = dist,
y = rej,
col = `Tamanho amostral`)) +
geom_point() +
geom_line() +
facet_wrap(~distribution)+
ylab("% rejeição") +
xlab("Distância") +
ggtitle("")+
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (15),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 10),
text = element_text(size=10))
results2 <- rbind(#tri_n50$df_final,
tri_n100$df_final,
tri_n250$df_final,
tri_n500$df_final,
tri_n1000$df_final)
results2$sample_size <- as.factor(results2$sample_size)
names(results2)[4] <- "Tamanho amostral"
results2$distribution <- as.factor(results2$distribution)
ggplot(data = results2,
mapping = aes(x = dist,
y = rej,
col = `Tamanho amostral`)) +
geom_point() +
geom_line() +
facet_wrap(~distribution)+
ylab("% rejeição") +
xlab("Distância") +
ggtitle("")+
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (15),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 10),
text = element_text(size=10))
sample_size = 50
n_datasets = 500
n_treatment = 4
betas = c(0.5,0,0,0)
n_distances = 20
distribution = 'binomial'
n_datasets = 10
distribution = 'normal'
# tratamentos
trat <- gl(n_treatment, sample_size/n_treatment)
# matriz do modelo
X <- model.matrix(~ trat)
# lista para armazenar os conjuntos de dados
datasets <- list()
switch(distribution,
"normal" = {
link <- c("identity")
variance <- c("constant")
for (i in 1:(n_datasets+10)) {
mu <- X%*%betas
y <- rnorm(sample_size, mean = mu, sd = 1)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
},
"poisson" = {
link <- c("log")
variance <- c("tweedie")
for (i in 1:(n_datasets+10)) {
lambda <- exp(X%*%betas)
y <- rpois(sample_size,
lambda = lambda)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
},
"binomial" = {
link <-  "logit"
variance  <-  "binomialP"
for (i in 1:(n_datasets+10)) {
p <- exp(X%*%betas)/(1 + exp(X%*%betas))
y <- rbinom(sample_size,
p = p,
size = 1)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
},
"beta" = {
link <- "logit"
variance <- "binomialP"
for (i in 1:(n_datasets+10)) {
p <- exp(X%*%betas)/(1 + exp(X%*%betas))
y <- gamlss.dist::rBE(sample_size,
mu = p,
sigma = 0.2)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
}
)
datasets
sample_size = 50
n_datasets = 10
n_treatment = 4
betas = c(5,0,0,0)
n_distances = 20
distribution = 'normal'
# tratamentos
trat <- gl(n_treatment, sample_size/n_treatment)
# matriz do modelo
X <- model.matrix(~ trat)
# lista para armazenar os conjuntos de dados
datasets <- list()
switch(distribution,
"normal" = {
link <- c("identity")
variance <- c("constant")
for (i in 1:(n_datasets+10)) {
mu <- X%*%betas
y <- rnorm(sample_size, mean = mu, sd = 1)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
},
"poisson" = {
link <- c("log")
variance <- c("tweedie")
for (i in 1:(n_datasets+10)) {
lambda <- exp(X%*%betas)
y <- rpois(sample_size,
lambda = lambda)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
},
"binomial" = {
link <-  "logit"
variance  <-  "binomialP"
for (i in 1:(n_datasets+10)) {
p <- exp(X%*%betas)/(1 + exp(X%*%betas))
y <- rbinom(sample_size,
p = p,
size = 1)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
},
"beta" = {
link <- "logit"
variance <- "binomialP"
for (i in 1:(n_datasets+10)) {
p <- exp(X%*%betas)/(1 + exp(X%*%betas))
y <- gamlss.dist::rBE(sample_size,
mu = p,
sigma = 0.2)
datasets[[i]] <- data.frame(y = y,
x = trat)
}
}
)
switch(distribution,
"binomial" = {form = y/1~x},
{form = y~x}
)
# preditor matricial
Z0 <- mc_id(datasets[[1]]) # matriz identidade para o preditor matricial
library(mcglm)
library(Matrix)
#----------------------------------------------------------------
# minhas funções
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
source("~/msc/3_th_mcglm/4_estudo_simulacao/funcoes_simula/simula_uni.R")
source("~/msc/3_th_mcglm/4_estudo_simulacao/funcoes_simula/simula_tri_normal.R")
source("~/msc/3_th_mcglm/4_estudo_simulacao/funcoes_simula/simula_tri_pois_binom.R")
source("~/msc/3_th_mcglm/4_estudo_simulacao/funcoes_simula/simula_tri.R")
# preditor matricial
Z0 <- mc_id(datasets[[1]]) # matriz identidade para o preditor matricial
models <- list()
switch(distribution,
"binomial" = {
for (i in 1:(n_datasets+10)) {
fit <-
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = link,
variance = variance,
Ntrial = list(1),
data = datasets[[i]])
models[[i]] <- fit
print(i)
}
},
{
for (i in 1:(n_datasets+10)) {
fit <-
mcglm(linear_pred = c(form),
matrix_pred = list(c(Z0)),
link = link,
variance = variance,
data = datasets[[i]])
models[[i]] <- fit
print(i)
}
}
)
variance
link
ggplot(data = results1,
mapping = aes(x = dist,
y = rej,
col = `Tamanho amostral`)) +
geom_point() +
geom_line() +
facet_wrap(~distribution)+
ylab("% rejeição") +
xlab("Distância") +
ggtitle("")+
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (15),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 10),
text = element_text(size=10))
library(ggplot2)
load("~/msc/3_th_mcglm/4_estudo_simulacao/SIMULA/betas/results.RData")
time_taken_uni
time_taken_tri
time_taken_tri2
results1 <- rbind(normal_uni_n50$df_final,
poisson_uni_n50$df_final,
binomial_uni_n50$df_final,
normal_uni_n100$df_final,
poisson_uni_n100$df_final,
binomial_uni_n100$df_final,
normal_uni_n250$df_final,
poisson_uni_n250$df_final,
binomial_uni_n250$df_final,
normal_uni_n500$df_final,
poisson_uni_n500$df_final,
binomial_uni_n500$df_final,
normal_uni_n1000$df_final,
poisson_uni_n1000$df_final,
binomial_uni_n1000$df_final,
normal_tri_n50$df_final,
poisson_tri_n50$df_final,
#binomial_tri_n50$df_final,
normal_tri_n100$df_final,
poisson_tri_n100$df_final,
binomial_tri_n100$df_final,
normal_tri_n250$df_final,
poisson_tri_n250$df_final,
binomial_tri_n250$df_final,
normal_tri_n500$df_final,
poisson_tri_n500$df_final,
binomial_tri_n500$df_final,
normal_tri_n1000$df_final,
poisson_tri_n1000$df_final,
binomial_tri_n1000$df_final)
results1$sample_size <- as.factor(results1$sample_size)
names(results1)[4] <- "Tamanho amostral"
results1$distribution
unique(results1$distribution)
results1$distribution <- factor(results1$distribution,
levels = c("uni normal", "uni poisson",
"uni binomial", "tri normal",
"tri poisson", "tri binomial"))
results1$distribution
ggplot(data = results1,
mapping = aes(x = dist,
y = rej,
col = `Tamanho amostral`)) +
geom_point() +
geom_line() +
facet_wrap(~distribution)+
ylab("% rejeição") +
xlab("Distância") +
ggtitle("")+
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (15),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 10),
text = element_text(size=10))
results2$distribution
ggplot(data = results2,
mapping = aes(x = dist,
y = rej,
col = `Tamanho amostral`)) +
geom_point() +
geom_line() +
facet_wrap(~distribution)+
ylab("% rejeição") +
xlab("Distância") +
ggtitle("")+
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (15),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 10),
text = element_text(size=10))
library(ggplot2)
load("~/msc/3_th_mcglm/4_estudo_simulacao/SIMULA/betas/results.RData")
time_taken_uni
time_taken_tri
time_taken_tri2
results1 <- rbind(normal_uni_n50$df_final,
poisson_uni_n50$df_final,
binomial_uni_n50$df_final,
normal_uni_n100$df_final,
poisson_uni_n100$df_final,
binomial_uni_n100$df_final,
normal_uni_n250$df_final,
poisson_uni_n250$df_final,
binomial_uni_n250$df_final,
normal_uni_n500$df_final,
poisson_uni_n500$df_final,
binomial_uni_n500$df_final,
normal_uni_n1000$df_final,
poisson_uni_n1000$df_final,
binomial_uni_n1000$df_final,
normal_tri_n50$df_final,
poisson_tri_n50$df_final,
#binomial_tri_n50$df_final,
normal_tri_n100$df_final,
poisson_tri_n100$df_final,
binomial_tri_n100$df_final,
normal_tri_n250$df_final,
poisson_tri_n250$df_final,
binomial_tri_n250$df_final,
normal_tri_n500$df_final,
poisson_tri_n500$df_final,
binomial_tri_n500$df_final,
normal_tri_n1000$df_final,
poisson_tri_n1000$df_final,
binomial_tri_n1000$df_final)
results1$sample_size <- as.factor(results1$sample_size)
names(results1)[4] <- "Tamanho amostral"
results1$distribution <- factor(results1$distribution,
levels = c("uni normal", "uni poisson",
"uni binomial", "tri normal",
"tri poisson", "tri binomial"))
ggplot(data = results1,
mapping = aes(x = dist,
y = rej,
col = `Tamanho amostral`)) +
geom_point() +
geom_line() +
facet_wrap(~distribution)+
ylab("% rejeição") +
xlab("Distância") +
ggtitle("")+
theme_bw() +
theme(legend.position = 'bottom',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (15),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 10),
text = element_text(size=10))
