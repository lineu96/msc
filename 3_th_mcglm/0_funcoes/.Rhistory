library(mcglm)
library(car)
source('~/msc/3_th_mcglm/0_funcoes/functions.R')
# Dados
?labestData::PaulaEg1.12.5
dados <- labestData::PaulaEg1.12.5[ , -1]
# MODELO SEM INTERAÇÕES
form  <- cons ~ (taxa + licen + renda + estr)
# MODELO COM INTERAÇÕES
form2  <- cons ~ (taxa + licen + renda + estr)^2
# GLM
m1 <- glm(formula = form2, data = dados)
# McGLM
Z0 <- mc_id(dados) # Identidade
m2 <- mcglm(linear_pred = c(form2),
matrix_pred = list(c(Z0)),
data = dados)
# Estimativas
data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
Anova(m1, type = 'II', test.statistic = 'Wald')
object = m2
object
# Vetor beta chapeu e indice de resposta
beta <- coef(object, type = "beta")[,c(1, 4)]
beta
# Número de betas por resposta
n_beta <- as.vector(table(beta$Response))
n_beta
# Número de respostas
n_resp <- length(n_beta)
n_resp
vcov_betas <- list()
if (n_resp == 1) {
vcov_betas[[1]] <- vcov(object)[1:n_beta[1], 1:n_beta[1]]
} else {
vcov_betas[[1]] <- vcov(object)[1:n_beta[1], 1:n_beta[1]]
for (i in 2:n_resp) {
vcov_betas[[i]] <-
vcov(object)[(cumsum(n_beta)[i-1]+1):(cumsum(n_beta)[i]),
(cumsum(n_beta)[i-1]+1):(cumsum(n_beta)[i])]
}
}
vcov_betas
p_var <- list()
for (i in 1:n_resp) {
p_var[[i]] <- attr(object$list_X[[i]], "assign")
}
p_var
# Matriz L para todos os parâmetros (Hypothesis matrix), por resposta
L_all <- list()
for (i in 1:n_resp) {
L_all[[i]] <- diag(length(p_var[[i]]))
}
L_all
expand <- list()
for (i in 1:length(L_all)) {
expand[[i]] <- by(data = L_all[[i]],
INDICES = p_var[[i]],
FUN = as.matrix)
}
beta_names <- list()
for (i in 1:length(L_all)) {
beta_names[[i]] <- object$beta_names[[i]]
}
testes <- list()
for (i in 1:length(L_all)) {
testes[[i]] <- data.frame(beta_names = beta_names[[i]],
interacao = stringr::str_detect(beta_names[[i]], ':'))
}
for (i in 1:length(L_all)) {
for (j in 1:(length(expand[[i]]))) {
testes[[i]][,j+2] <- colSums(expand[[i]][[j]])
}
}
aux <- list()
length(aux) <- n_resp
for (k in 1:length(L_all)) {
for (i in 3:ncol(testes[[k]])) {
padrao <- as.vector(subset(testes[[k]], interacao == FALSE & testes[[k]][,i] == 1)$beta_names)
x <- matrix(nrow = nrow(testes[[k]]), ncol = length(padrao))
for (j in 1:nrow(testes[[k]])) {
x[j,] <- sjmisc::str_contains(testes[[k]]$beta_names[j],
pattern = padrao)
}
aux[[k]][[i]] <- list()
aux[[k]][[i]] <- ifelse(rowSums(x) == 1, 1, testes[[k]][,i])
as.vector(aux[[k]][[i]])
}
}
p_varII <- list()
for (i in 1:length(aux)) {
p_varII[[i]] <- as.data.frame(do.call(cbind, aux[[i]]))
}
p_varII
p_varII <- list()
for (i in 1:length(aux)) {
p_varII[[i]] <- as.data.frame(do.call(cbind, aux[[i]]))
}
L_par <- list()
length(L_par) <- n_resp
for (j in 1:length(p_varII)) {
for (i in 1:ncol(p_varII[[j]])) {
L_par[[j]][[i]] <- by(data = L_all[[j]],
INDICES = p_varII[[j]][,i],
FUN = as.matrix)$`1`
}
}
L_par
L_par[[1]][[2]]
beta$Response
W <- as.numeric((t(L_par[[1]][[2]] %*% subset(beta, beta$Response == 1)$Estimates)) %*% (solve(L_par[[1]][[2]]%*%vcov_betas[[1]]%*%t(L_par[[1]][[2]]))) %*% (L_par[[1]][[2]] %*% subset(beta, beta$Response == 1)$Estimates))
W
mc_anova_II(m2)[[1]]
gl <- nrow(L_par[[1]][[2]])
gl
p_val <- pchisq(W, df = gl, lower.tail = FALSE)
p_val
L_par[[1]][[2]]
L_par_teste <- matrix(nrow = 4, ncol = 11)
L_par_teste
L_par_teste <- matrix(nrow = 4, ncol = 11, byrow = T)
c(0,1,rep(0,42))
L_par_teste <- matrix(c(0,1,rep(0,42)),
nrow = 4,
ncol = 11,
byrow = T)
L_par_teste
L_par[[1]][[2]]
L_par_teste <- matrix(c(0,1,rep(0,42)),
nrow = 4,
ncol = 11,
byrow = T)
as.numeric((t(L_par_teste %*% subset(beta, beta$Response == 1)$Estimates)) %*% (solve(L_par_teste%*%vcov_betas[[1]]%*%t(L_par_teste))) %*% (L_par_teste %*% subset(beta, beta$Response == 1)$Estimates))
L_par_teste
subset(beta, beta$Response == 1)$Estimates)
subset(beta, beta$Response == 1)$Estimates
L_par_teste %*% subset(beta, beta$Response == 1)$Estimates
t(L_par_teste %*% subset(beta, beta$Response == 1)$Estimates)
t(L_par_teste %*% subset(beta, beta$Response == 1)$Estimates)) %*% (solve(L_par_teste%*%vcov_betas[[1]]
(solve(L_par_teste%*%vcov_betas[[1]]%*%t(L_par_teste)))
L_par_teste
L_par_teste%*%vcov_betas[[1]]
L_par_teste%*%vcov_betas[[1]]%*%t(L_par_teste)
(solve(L_par_teste%*%vcov_betas[[1]]%*%t(L_par_teste)))
(solve(L_par_teste%*%vcov_betas[[1]]%*%t(L_par_teste)))
(L_par_teste%*%vcov_betas[[1]]%*%t(L_par_teste))
teste <- (L_par_teste%*%vcov_betas[[1]]%*%t(L_par_teste))
det(teste)
teste
as.matrix(teste)
det(as.matrix(teste))
L_par
L_par[[1]][[3]]
W <- as.numeric((t(L_par[[1]][[3]] %*% subset(beta, beta$Response == 1)$Estimates)) %*% (solve(L_par[[1]][[3]]%*%vcov_betas[[1]]%*%t(L_par[[1]][[3]]))) %*% (L_par[[1]][[3]] %*% subset(beta, beta$Response == 1)$Estimates))
W
12+10+8+6
20+20+20+20
20
20+18
20+18+18+18
74-36
L_par[[1]][[3]]
W <- as.numeric((t(L_par[[1]][[3]] %*% subset(beta, beta$Response == 1)$Estimates)) %*% (solve(L_par[[1]][[3]]%*%vcov_betas[[1]]%*%t(L_par[[1]][[3]]))) %*% (L_par[[1]][[3]] %*% subset(beta, beta$Response == 1)$Estimates))
W
mc_anova_II(m2)[[1]]
W <- as.numeric((t(L_par[[1]][[3]] %*% subset(beta, beta$Response == 1)$Estimates)) %*% (solve(L_par[[1]][[3]]%*%vcov_betas[[1]]%*%t(L_par[[1]][[3]]))) %*% (L_par[[1]][[3]] %*% subset(beta, beta$Response == 1)$Estimates))
gl <- nrow(L_par[[1]][[3]])
gl
p_val <- pchisq(W, df = gl, lower.tail = FALSE)
p_val
L_par[[1]][[3]]
L_par_teste <- matrix(c(0,0,1,rep(0,41)),
nrow = 4,
ncol = 11,
byrow = T)
L_par_teste
colnames(L_par[[1]][[3]])
colnames(L_par_teste) <- colnames(L_par[[1]][[3]])
L_par[[1]][[3]]
L_par_teste
rownames(L_par_teste) <- rownames(L_par[[1]][[3]])
L_par[[1]][[3]]
L_par_teste
W1 <- as.numeric((t(L_par_teste %*% subset(beta, beta$Response == 1)$Estimates)) %*% (solve(L_par_teste%*%vcov_betas[[1]]%*%t(L_par_teste))) %*% (L_par_teste %*% subset(beta, beta$Response == 1)$Estimates))
W1
L_par_teste %*% subset(beta, beta$Response == 1)
L_par_teste %*% subset(beta, beta$Response == 1)$Estimates)
L_par_teste %*% subset(beta, beta$Response == 1)$Estimates))
(L_par_teste %*% subset(beta, beta$Response == 1)$Estimates)
help(car)
??car
library(car)
?car
??car
car::Anova()
?car::Anova()
form  <- cons ~ (taxa + licen)^2
# GLM
m1 <- glm(formula = form2, data = dados)
# McGLM
Z0 <- mc_id(dados) # Identidade
m2 <- mcglm(linear_pred = c(form2),
matrix_pred = list(c(Z0)),
data = dados)
# Estimativas
data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
form  <- cons ~ taxa + licen + taxa:licen
# GLM
m1 <- glm(formula = form2, data = dados)
# McGLM
Z0 <- mc_id(dados) # Identidade
m2 <- mcglm(linear_pred = c(form2),
matrix_pred = list(c(Z0)),
data = dados)
# Estimativas
data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
form2  <- cons ~ (taxa + licen)^2
# GLM
m1 <- glm(formula = form2, data = dados)
# McGLM
Z0 <- mc_id(dados) # Identidade
m2 <- mcglm(linear_pred = c(form2),
matrix_pred = list(c(Z0)),
data = dados)
# Estimativas
data.frame(glm = round(m1$coefficients, 2),
mcglm = round(m2$Regression, 2))
## Tipo III
Anova(m1, type = 'III', test.statistic = 'Wald')
mc_anova_III(m2)[[1]]
library(ggplot2)
source('~/Dropbox/Aulas-Acessorias/8 Bruna Maia/2_scripts/0_funcoes.R')
# Dados
dados <- read.csv2("~/Dropbox/Aulas-Acessorias/8 Bruna Maia/0_dados/dados1.csv")
dados$sexo <- as.factor(dados$sexo)
dados$hpylori <- as.factor(dados$hpylori)
dados$pre_dm <- as.factor(dados$pre_dm)
dados$dm <- as.factor(dados$dm)
dados$dislip <- as.factor(dados$dislip)
dados$has <- as.factor(dados$has)
dados$dcv <- as.factor(dados$dcv)
dados$apneia <- as.factor(dados$apneia)
dados$dor_art <- as.factor(dados$dor_art)
dados$frutose <- as.factor(dados$frutose)
dados$lactose <- as.factor(dados$lactose)
dados$manitol <- as.factor(dados$manitol)
dados$sorbitol <- as.factor(dados$sorbitol)
dados$gos <- as.factor(dados$gos)
dados$fructano <- as.factor(dados$fructano)
str(dados)
dim(dados)
names(dados)
sexo <- tb_freq(dados$sexo)
hpylori <- tb_freq(dados$hpylori)
pre_dm <- tb_freq(dados$pre_dm)
dm <- tb_freq(dados$dm)
dislip <- tb_freq(dados$dislip)
has <- tb_freq(dados$has)
dcv <- tb_freq(dados$dcv)
apneia <- tb_freq(dados$apneia)
dor_art <- tb_freq(dados$dor_art)
tb_freq2(dados$idade)
dor_abd <- tb_freq(factor(dados$frutose, levels = 1:2))
tb_freq(factor(dados$frutose, levels = 1:2))
tb_freq(factor(dados$frutose, levels = 0:2))
tb_freq(factor(dados$lactose, levels = 0:2))
tb_freq(factor(dados$manitol, levels = 0:2))
tb_freq(factor(dados$sorbitol, levels = 0:2))
tb_freq(factor(dados$gos, levels = 0:2))
tb_freq(factor(dados$fructano, levels = 0:2))
frutose <- tb_freq(factor(dados$frutose, levels = 0:2))
bar_freqtab(frutose, 'Frutose')
frutose <- tb_freq(factor(dados$frutose, levels = 0:2))
lactose <- tb_freq(factor(dados$lactose, levels = 0:2))
manitol <- tb_freq(factor(dados$manitol, levels = 0:2))
sorbitol <- tb_freq(factor(dados$sorbitol, levels = 0:2))
gos <- tb_freq(factor(dados$gos, levels = 0:2))
fructano <- tb_freq(factor(dados$fructano, levels = 0:2))
bar_freqtab(frutose, 'Frutose')
bar_freqtab(lactose, 'Lactose')
bar_freqtab(manitol, 'Manitol')
bar_freqtab(sorbitol, 'Sorbitol')
bar_freqtab(gos, 'Gos')
bar_freqtab(fructano, 'Fructano')
dados$frutose <- as.factor(dados$frutose)
dados$lactose <- as.factor(dados$lactose)
dados$manitol <- as.factor(dados$manitol)
dados$sorbitol <- as.factor(dados$sorbitol)
dados$gos <- as.factor(dados$gos)
dados$fructano <- as.factor(dados$fructano)
frutose <- tb_freq(factor(dados$frutose, levels = 0:2))
lactose <- tb_freq(factor(dados$lactose, levels = 0:2))
manitol <- tb_freq(factor(dados$manitol, levels = 0:2))
sorbitol <- tb_freq(factor(dados$sorbitol, levels = 0:2))
gos <- tb_freq(factor(dados$gos, levels = 0:2))
fructano <- tb_freq(factor(dados$fructano, levels = 0:2))
bar_freqtab(frutose, 'Frutose')
bar_freqtab(lactose, 'Lactose')
bar_freqtab(manitol, 'Manitol')
names(dados)
?glm
library(gamlss)
m <- gamlss(dor_abd ~ frutose + lactose + manitol + sorbitol +
gos + fructano + hpylori + dm + dislip + has +
apneia + dor_art, data = dados)
m <- gamlss(dor_abd ~ frutose + lactose + manitol + sorbitol +
gos + fructano + hpylori + dm + dislip + has +
apneia + dor_art, data = na.omit(dados))
m
dados$dor_abd
plot(m)
plot(m)
summary(m)
dados$dor_abd
ifelse(dados$dor_abd != 1, 'apresenta', 'nao_apresenta')
m <- gamlss(ifelse(dados$dor_abd != 1, 'apresenta', 'nao_apresenta') ~
frutose + lactose + manitol + sorbitol +
gos + fructano + hpylori + dm + dislip + has +
apneia + dor_art, data = na.omit(dados))
naomit(dados)$dor_abd
na.omit(dados)$dor_abd
m <- gamlss(ifelse(na.omit(dados)$dor_abd != 1, 'apresenta', 'nao_apresenta') ~
frutose + lactose + manitol + sorbitol +
gos + fructano + hpylori + dm + dislip + has +
apneia + dor_art, data = na.omit(dados))
m
BI()
m <- gamlss(ifelse(na.omit(dados)$dor_abd != 1, 'apresenta', 'nao_apresenta') ~
frutose + lactose + manitol + sorbitol +
gos + fructano + hpylori + dm + dislip + has +
apneia + dor_art, data = na.omit(dados), family = BI())
m <- gamlss(ifelse(na.omit(dados)$dor_abd != 1, 1, 0) ~
frutose + lactose + manitol + sorbitol +
gos + fructano + hpylori + dm + dislip + has +
apneia + dor_art, data = na.omit(dados), family = BI())
summary(m)
plot(m)
plot(m)
m <- gamlss(ifelse(na.omit(dados)$nausea != 1, 1, 0) ~
frutose + lactose + manitol + sorbitol +
gos + fructano + hpylori + dm + dislip + has +
apneia + dor_art, data = na.omit(dados), family = BI())
summary(m)
plot(m)
x11()
plot(m)
m <- gamlss(ifelse(na.omit(dados)$ronco != 1, 1, 0) ~
frutose + lactose + manitol + sorbitol +
gos + fructano + hpylori + dm + dislip + has +
apneia + dor_art, data = na.omit(dados), family = BI())
summary(m)
plot(m)
x11()
plot(m)
0.75*90
dados$frutose
levels(dados$frutose) <- c('Baixo', 'Médio', 'Alto')
dados$frutose
levels(dados$fructano)
levels(dados$gos)
levels(dados$sorbitol)
levels(dados$manitol)
levels(dados$lactose)
levels(dados$frutose)
knitr::opts_chunk$set(echo = TRUE, cache = FALSE)
source('~/Dropbox/Aulas-Acessorias/8 Bruna Maia/2_scripts/0_funcoes.R')
dados <- read.csv2("~/Dropbox/Aulas-Acessorias/8 Bruna Maia/0_dados/dados1.csv")
dados$dor_abd2 <- as.factor(ifelse(dados$dor_abd == 1, 'Não apresenta', 'Apresenta'))
#azia
#refluxo
#fome_dor
dados$nausea2 <- as.factor(ifelse(dados$nausea == 1, 'Não apresenta', 'Apresenta'))
dados$ronco2 <- as.factor(ifelse(dados$ronco == 1, 'Não apresenta', 'Apresenta'))
#ar
dados$arroto2 <- as.factor(ifelse(dados$arroto == 1, 'Não apresenta', 'Apresenta'))
#gases
dados$constip2 <- as.factor(ifelse(dados$constip == 1, 'Não apresenta', 'Apresenta'))
dados$diarr2 <- as.factor(ifelse(dados$diarr == 1, 'Não apresenta', 'Apresenta'))
dados$fe_moles2 <- as.factor(ifelse(dados$fe_moles == 1, 'Não apresenta', 'Apresenta'))
dados$fe_duras2 <- as.factor(ifelse(dados$fe_duras == 1, 'Não apresenta', 'Apresenta'))
dados$urg_defec2 <- as.factor(ifelse(dados$urg_defec == 1, 'Não apresenta', 'Apresenta'))
dados$n_esvaz2 <- as.factor(ifelse(dados$n_esvaz == 1, 'Não apresenta', 'Apresenta'))
dados$sexo <- as.factor(ifelse(dados$sexo == 2, 'Feminino', 'Masculino'))
dados$hpylori <- as.factor(ifelse(dados$hpylori == 1, 'Apresenta', 'Não apresenta'))
dados$pre_dm <- as.factor(ifelse(dados$pre_dm == 1, 'Apresenta', 'Não apresenta'))
dados$dm <- as.factor(ifelse(dados$dm == 1, 'Apresenta', 'Não apresenta'))
dados$dislip <- as.factor(ifelse(dados$dislip == 1, 'Apresenta', 'Não apresenta'))
dados$has <- as.factor(ifelse(dados$has == 1, 'Apresenta', 'Não apresenta'))
dados$dcv <- as.factor(ifelse(dados$dcv == 1, 'Apresenta', 'Não apresenta'))
dados$apneia <- as.factor(ifelse(dados$apneia == 1, 'Apresenta', 'Não apresenta'))
dados$dor_art <- as.factor(ifelse(dados$dor_art == 1, 'Apresenta', 'Não apresenta'))
levels(as.factor(dados$frutose)) <- c('Baixo', 'Médio', 'Alto')
levels(as.factor(dados$frutose))
levels(as.factor(dados$frutose)) <- c('Baixo', 'Médio', 'Alto')
as.factor(dados$frutose)
as.factor(dados$lactose)
as.factor(dados$manitol)
as.factor(dados$sorbitol)
as.factor(dados$gos)
as.factor(dados$fructano)
dados$frutose <- as.factor(dados$frutose)
dados$lactose <- as.factor(dados$lactose)
dados$manitol <- as.factor(dados$manitol)
dados$sorbitol <- as.factor(dados$sorbitol)
dados$gos <- as.factor(dados$gos)
dados$fructano <- as.factor(dados$fructano)
dados$fructano
levels((dados$frutose))
levels((dados$frutose)) <- c('Baixo', 'Médio', 'Alto')
levels(dados$frutose)
c('Baixo', 'Médio', 'Alto')
levels(dados$frutose) <- c('Baixo', 'Médio', 'Alto')
levels((dados$lactose)) <- c('Baixo', 'Médio', 'Alto')
levels(dados$frutose) <- c('Baixo', 'Médio', 'Alto')
levels(dados$lactose) <- c('Baixo', 'Médio', 'Alto')
levels(dados$manitol) <- c('Baixo', 'Médio', 'Alto')
levels(dados$sorbitol) <- c('Baixo', 'Médio', 'Alto')
levels(dados$gos) <- c('Baixo', 'Médio', 'Alto')
levels(dados$fructano) <- c('Baixo', 'Médio', 'Alto')
dados$lactose
dados$manitol
dados$sorbitol
dados$gos
dados$fructano
bar_freqtab(frutose, 'Frutose')
dados$dor_abd2
dados$frutose
bi_bar(dados$dor_abd2, dados$frutose,
'dor_abd', 'frutose',
'Dor abdominal',
'Frutose')
bi_bar(dados$dor_abd2, dados$frutose,
'dor_abd', 'frutose',
'Dor abdominal',
'Frutose')
bi_bar
bi_bar(dados$n_esvaz2, dados$frutose,
'dor_abd', 'frutose',
'Não esvaziamento',
'Frutose')
dados$
bi_bar(dados$n_esvaz2, dados$frutose,
'n_esvaz', 'frutose',
'Não esvaziamento',
'Frutose')
dados$
bi_bar(dados$n_esvaz2, dados$frutose,
'n_esvaz', 'frutose',
'Não esvaziamento',
'Frutose')
bi_bar(dados$n_esvaz2, dados$frutose,
'dor_abd', 'frutose',
'Não esvaziamento',
'Frutose')
bi_bar(dados$n_esvaz2, dados$frutose,
'n_esvaz2', 'frutose',
'Não esvaziamento',
'Frutose')
bi_bar
as.data.frame(table(dados$n_esvaz2, dados$frutose))
bp(dados,'frutose', 'score', 'Frutose', 'Score')
